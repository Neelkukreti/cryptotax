{"ast":null,"code":"var _jsxFileName = \"/Users/neel/Documents/Tax calculator/taxcalc/crypto-tax-calculator/src/components/UploadTransactions.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport * as XLSX from 'xlsx';\nimport { Button, Typography, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, Box, IconButton, TextField, Grid } from '@mui/material';\nimport EditIcon from '@mui/icons-material/Edit';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// Helper function to calculate tax on profit\n\nconst UploadTransactions = () => {\n  _s();\n  const [transactions, setTransactions] = useState([]);\n  const [isEditing, setIsEditing] = useState(false);\n  const [editedTransaction, setEditedTransaction] = useState(null);\n  const [taxReport, setTaxReport] = useState([]);\n  const handleClick = () => {\n    console.log('Button clicked!');\n  };\n  const [fixingMarket, setFixingMarket] = useState(null);\n  const [newTransaction, setNewTransaction] = useState({\n    Date: '',\n    Market: '',\n    Type: 'BUY',\n    // Default to BUY\n    Price: 0,\n    Amount: 0,\n    Fee: 0\n  });\n  const handleFixMarket = market => {\n    setFixingMarket(market);\n    setNewTransaction({\n      Date: new Date().toISOString().split('T')[0],\n      // Default to today's date\n      Market: market,\n      Type: 'BUY',\n      Price: 0,\n      Amount: 0,\n      Fee: 0\n    });\n  };\n  const handleAddTransaction = () => {\n    const newTransaction = {\n      Date: '',\n      Market: '',\n      Type: '',\n      Price: 0,\n      Amount: 0,\n      Total: 0,\n      Fee: 0\n    };\n    setTransactions([...transactions, newTransaction]);\n    setIsEditing(true);\n    setEditedTransaction(newTransaction);\n  };\n  const generateTaxReport = () => {\n    const marketData = {};\n    transactions.forEach(transaction => {\n      const market = transaction.Market;\n      const type = transaction.Type; // \"BUY\" or \"SELL\"\n      const price = +transaction.Price || 0;\n      const amount = +transaction.Amount || 0;\n      if (!marketData[market]) {\n        marketData[market] = {\n          buyTotal: 0,\n          sellTotal: 0,\n          quantity: 0\n        };\n      }\n      if (type === \"BUY\") {\n        marketData[market].buyTotal += price * amount;\n        marketData[market].quantity += amount;\n      } else if (type === \"SELL\") {\n        marketData[market].sellTotal += price * amount;\n        marketData[market].quantity -= amount;\n      }\n    });\n    const report = Object.keys(marketData).map((market, index) => {\n      const {\n        buyTotal,\n        sellTotal,\n        quantity\n      } = marketData[market];\n      const profit = sellTotal - buyTotal;\n      const tax = profit * 0.3;\n      let note = '';\n      if (quantity < 0) {\n        note = 'Sell exceeds buy. Please fix transactions.';\n      } else if (quantity === 0 && buyTotal === 0) {\n        note = 'No buy transaction found. Asset might be deposited.';\n      }\n      return {\n        index: index + 1,\n        market,\n        profit: profit.toFixed(2),\n        tax: tax.toFixed(2),\n        remainingQuantity: quantity.toFixed(2),\n        note\n      };\n    });\n    return report;\n  };\n  const handleCalculateTax = () => {\n    const report = generateTaxReport();\n    console.log(report);\n    setTaxReport(report);\n  };\n  const calculateTax = (purchasePrice, sellPrice, amount) => {\n    if (isNaN(purchasePrice) || isNaN(sellPrice) || isNaN(amount)) {\n      console.log('Invalid purchase price');\n      console.error(\"Invalid data for tax calculation\", {\n        purchasePrice,\n        sellPrice,\n        amount\n      });\n      return NaN;\n    }\n    console.log('Valid purchase price');\n    const profit = (sellPrice - purchasePrice) * amount;\n    const tax = profit * 0.30; // 30% tax rate on profit\n    return tax;\n  };\n  const handleFileUpload = event => {\n    var _event$target$files;\n    const file = (_event$target$files = event.target.files) === null || _event$target$files === void 0 ? void 0 : _event$target$files[0];\n    if (!file) return console.error(\"No file selected\");\n    const reader = new FileReader();\n    reader.onload = e => {\n      var _e$target;\n      const binaryStr = (_e$target = e.target) === null || _e$target === void 0 ? void 0 : _e$target.result;\n      if (typeof binaryStr === 'string') {\n        const workbook = XLSX.read(binaryStr, {\n          type: 'binary'\n        });\n        const firstSheetName = workbook.SheetNames[0];\n        const worksheet = workbook.Sheets[firstSheetName];\n        const jsonData = XLSX.utils.sheet_to_json(worksheet, {\n          header: 1\n        });\n        const transactions = processExcelData(jsonData);\n        setTransactions(transactions);\n      }\n    };\n    reader.readAsBinaryString(file);\n  };\n  const processExcelData = jsonData => {\n    const [headers, ...rows] = jsonData;\n    const formattedHeaders = headers.map(header => header.trim().charAt(0).toUpperCase() + header.trim().slice(1));\n    return rows.map(row => {\n      const transaction = {};\n      formattedHeaders.forEach((header, index) => {\n        const value = row[index] || '';\n        transaction[header] = ['Price', 'Total', 'Amount'].includes(header) ? +value : value; // Convert numeric fields\n      });\n      return transaction;\n    });\n  };\n  const handleEdit = transaction => {\n    setIsEditing(true);\n    setEditedTransaction({\n      ...transaction\n    });\n  };\n  const handleSaveEdit = () => {\n    if (editedTransaction) {\n      const updatedTransactions = [...transactions];\n      const index = updatedTransactions.findIndex(t => t.Date === editedTransaction.Date && t.Market === editedTransaction.Market);\n      if (index !== -1) {\n        updatedTransactions[index] = editedTransaction;\n      } else {\n        updatedTransactions.push(editedTransaction); // Add as new transaction\n      }\n      setTransactions(updatedTransactions);\n      setIsEditing(false);\n      setEditedTransaction(null);\n    }\n  };\n  const handleChange = (e, field) => {\n    const target = e.target; // Explicitly cast to HTMLInputElement\n    const {\n      value\n    } = target;\n    setEditedTransaction(prev => ({\n      ...prev,\n      [field]: field === 'Amount' || field === 'Total' ? +value : value // Convert to number for Quantity and Total\n    }));\n  };\n  const handleDelete = transaction => {\n    const updatedTransactions = transactions.filter(t => t.Date !== transaction.Date || t.Market !== transaction.Market);\n    setTransactions(updatedTransactions);\n  };\n\n  // const handleCalculateTax = () => {\n  //   return transactions.map((transaction, index) => {\n  //     const price = +transaction.Price || 0; // Ensure numeric\n  //     const total = +transaction.Total || 0; // Ensure numeric\n  //     const amount = +transaction.Amount || 0; // Ensure numeric\n\n  //     const profit = (total - price) * amount;\n  //     const tax = profit * 0.3; // 30% tax rate\n\n  //     return {\n  //       index: index + 1,\n  //       profit: isNaN(profit) ? 0 : profit.toFixed(2),\n  //       tax: isNaN(tax) ? 0 : tax.toFixed(2),\n  //     };\n  //   });\n  // };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      padding: 3\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      align: \"center\",\n      children: \"Upload Transactions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        textAlign: 'center',\n        marginBottom: 3\n      },\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        component: \"label\",\n        color: \"primary\",\n        sx: {\n          padding: '10px 20px',\n          fontSize: '16px'\n        },\n        children: [\"Choose File\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \".xlsx, .xls\",\n          hidden: true,\n          onChange: handleFileUpload\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 7\n    }, this), transactions.length > 0 && /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        marginTop: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        gutterBottom: true,\n        align: \"center\",\n        children: \"Uploaded Transactions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n        component: Paper,\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          sx: {\n            minWidth: 650\n          },\n          \"aria-label\": \"transaction table\",\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [Object.keys(transactions[0]).map(key => /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"center\",\n                children: key\n              }, key, false, {\n                fileName: _jsxFileName,\n                lineNumber: 260,\n                columnNumber: 21\n              }, this)), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"center\",\n                children: \"Actions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 262,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: transactions.map((transaction, idx) => /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [Object.entries(transaction).map(([key, value], index) => {\n                let displayValue = String(value);\n                if (key === 'Type') {\n                  displayValue = value === 'Sell' ? /*#__PURE__*/_jsxDEV(\"span\", {\n                    style: {\n                      color: 'red',\n                      fontWeight: 'bold'\n                    },\n                    children: \"SELL\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 272,\n                    columnNumber: 27\n                  }, this) : value === 'Buy' ? /*#__PURE__*/_jsxDEV(\"span\", {\n                    style: {\n                      color: 'green',\n                      fontWeight: 'bold'\n                    },\n                    children: \"BUY\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 274,\n                    columnNumber: 27\n                  }, this) : String(value);\n                }\n                return /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: displayValue\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 280,\n                  columnNumber: 25\n                }, this);\n              }), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"center\",\n                children: [/*#__PURE__*/_jsxDEV(IconButton, {\n                  onClick: () => handleEdit(transaction),\n                  children: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 287,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 286,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                  onClick: () => handleDelete(transaction),\n                  children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 290,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 289,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 285,\n                columnNumber: 21\n              }, this)]\n            }, idx, true, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 11\n      }, this), isEditing && editedTransaction && /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          marginTop: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          gutterBottom: true,\n          children: \"Edit Transaction\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 14\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 6,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Amount\",\n              type: \"number\",\n              value: editedTransaction.Amount,\n              onChange: e => handleChange(e, 'Amount'),\n              fullWidth: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 7\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 6,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Price\",\n              type: \"number\",\n              value: editedTransaction.Price,\n              onChange: e => handleChange(e, 'Price'),\n              fullWidth: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 7\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 5\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: handleSaveEdit,\n          sx: {\n            marginTop: 2\n          },\n          children: \"Save Changes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 3\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 13\n      }, this), fixingMarket && /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          marginTop: 4\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          gutterBottom: true,\n          children: [\"Fix Transaction for Market: \", fixingMarket]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 6,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Type\",\n              select: true,\n              SelectProps: {\n                native: true\n              },\n              value: newTransaction.Type,\n              onChange: e => setNewTransaction({\n                ...newTransaction,\n                Type: e.target.value\n              }),\n              fullWidth: true,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"BUY\",\n                children: \"BUY\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 345,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"SELL\",\n                children: \"SELL\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 346,\n                columnNumber: 11\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 337,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 6,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Amount\",\n              type: \"number\",\n              value: newTransaction.Amount,\n              onChange: e => setNewTransaction({\n                ...newTransaction,\n                Amount: +e.target.value\n              }),\n              fullWidth: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 350,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 6,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Price\",\n              type: \"number\",\n              value: newTransaction.Price,\n              onChange: e => setNewTransaction({\n                ...newTransaction,\n                Price: +e.target.value\n              }),\n              fullWidth: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 359,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 6,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Fee\",\n              type: \"number\",\n              value: newTransaction.Fee,\n              onChange: e => setNewTransaction({\n                ...newTransaction,\n                Fee: +e.target.value\n              }),\n              fullWidth: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 368,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 367,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: () => handleSaveNewTransaction(),\n          sx: {\n            marginTop: 2\n          },\n          children: \"Save Transaction\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"text\",\n          color: \"secondary\",\n          onClick: () => setFixingMarket(null),\n          sx: {\n            marginLeft: 2\n          },\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          textAlign: 'center',\n          marginTop: 3\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"secondary\",\n          onClick: handleCalculateTax,\n          children: \"Calculate Tax\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 398,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 11\n      }, this), taxReport.length > 0 && /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          marginTop: 4\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          gutterBottom: true,\n          children: \"Tax Report\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n          component: Paper,\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            children: [/*#__PURE__*/_jsxDEV(TableHead, {\n              children: /*#__PURE__*/_jsxDEV(TableRow, {\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: \"Transaction\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 412,\n                  columnNumber: 13\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: \"Market\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 413,\n                  columnNumber: 5\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: \"Profit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 414,\n                  columnNumber: 5\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: \"Tax\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 415,\n                  columnNumber: 5\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: \"Remaining Quantity\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 416,\n                  columnNumber: 5\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: \"Note\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 417,\n                  columnNumber: 5\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 411,\n                columnNumber: 13\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 410,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n              children: taxReport.map(({\n                index,\n                market,\n                profit,\n                tax,\n                remainingQuantity,\n                note\n              }) => /*#__PURE__*/_jsxDEV(TableRow, {\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: index\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 424,\n                  columnNumber: 7\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: market\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 425,\n                  columnNumber: 7\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: profit\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 426,\n                  columnNumber: 7\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: tax\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 427,\n                  columnNumber: 7\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: remainingQuantity\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 428,\n                  columnNumber: 7\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: [note, note && /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"contained\",\n                    color: \"secondary\",\n                    size: \"small\",\n                    onClick: handleAddTransaction,\n                    sx: {\n                      marginLeft: 1\n                    },\n                    children: \"Fix\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 432,\n                    columnNumber: 11\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 429,\n                  columnNumber: 7\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 423,\n                columnNumber: 5\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 421,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 409,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 404,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 227,\n    columnNumber: 5\n  }, this);\n};\n_s(UploadTransactions, \"C9BYoikKwMY3tCWk+1Paln1f9zQ=\");\n_c = UploadTransactions;\nexport default UploadTransactions;\nvar _c;\n$RefreshReg$(_c, \"UploadTransactions\");","map":{"version":3,"names":["React","useState","XLSX","Button","Typography","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","Box","IconButton","TextField","Grid","EditIcon","DeleteIcon","jsxDEV","_jsxDEV","UploadTransactions","_s","transactions","setTransactions","isEditing","setIsEditing","editedTransaction","setEditedTransaction","taxReport","setTaxReport","handleClick","console","log","fixingMarket","setFixingMarket","newTransaction","setNewTransaction","Date","Market","Type","Price","Amount","Fee","handleFixMarket","market","toISOString","split","handleAddTransaction","Total","generateTaxReport","marketData","forEach","transaction","type","price","amount","buyTotal","sellTotal","quantity","report","Object","keys","map","index","profit","tax","note","toFixed","remainingQuantity","handleCalculateTax","calculateTax","purchasePrice","sellPrice","isNaN","error","NaN","handleFileUpload","event","_event$target$files","file","target","files","reader","FileReader","onload","e","_e$target","binaryStr","result","workbook","read","firstSheetName","SheetNames","worksheet","Sheets","jsonData","utils","sheet_to_json","header","processExcelData","readAsBinaryString","headers","rows","formattedHeaders","trim","charAt","toUpperCase","slice","row","value","includes","handleEdit","handleSaveEdit","updatedTransactions","findIndex","t","push","handleChange","field","prev","handleDelete","filter","sx","padding","children","variant","gutterBottom","align","fileName","_jsxFileName","lineNumber","columnNumber","textAlign","marginBottom","component","color","fontSize","accept","hidden","onChange","length","marginTop","minWidth","key","idx","entries","displayValue","String","style","fontWeight","onClick","container","spacing","item","xs","label","fullWidth","select","SelectProps","native","handleSaveNewTransaction","marginLeft","size","_c","$RefreshReg$"],"sources":["/Users/neel/Documents/Tax calculator/taxcalc/crypto-tax-calculator/src/components/UploadTransactions.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport * as XLSX from 'xlsx';\nimport { \n  Button, Typography, Table, TableBody, TableCell, TableContainer, \n  TableHead, TableRow, Paper, Box, IconButton, TextField, Grid \n} from '@mui/material';\nimport EditIcon from '@mui/icons-material/Edit';\nimport DeleteIcon from '@mui/icons-material/Delete';\n\ntype EditedTransactionType = {\n  Amount: number;\n  Total: number;\n  [key: string]: string | number;\n};\n\n// Helper function to calculate tax on profit\n\n\n\n\nconst UploadTransactions = () => {\n  const [transactions, setTransactions] = useState<any[]>([]);\n  const [isEditing, setIsEditing] = useState<boolean>(false);\n  const [editedTransaction, setEditedTransaction] = useState<EditedTransactionType | null>(null);\n  const [taxReport, setTaxReport] = useState<{ index: number; market: String; profit: string; tax: string;  remainingQuantity: string; note: string }[]>([]);\n  const handleClick = () => {\n    console.log('Button clicked!');\n  };\n\n  const [fixingMarket, setFixingMarket] = useState<string | null>(null);\nconst [newTransaction, setNewTransaction] = useState<any>({\n  Date: '',\n  Market: '',\n  Type: 'BUY', // Default to BUY\n  Price: 0,\n  Amount: 0,\n  Fee: 0,\n});\n\nconst handleFixMarket = (market: string) => {\n  setFixingMarket(market);\n  setNewTransaction({\n    Date: new Date().toISOString().split('T')[0], // Default to today's date\n    Market: market,\n    Type: 'BUY',\n    Price: 0,\n    Amount: 0,\n    Fee: 0,\n  });\n};\n\n  const handleAddTransaction = () => {\n    const newTransaction = {\n      Date: '', \n      Market: '',\n      Type: '',\n      Price: 0,\n      Amount: 0,\n      Total: 0,\n      Fee: 0,\n    };\n    setTransactions([...transactions, newTransaction]);\n    setIsEditing(true);\n    setEditedTransaction(newTransaction);\n  };\n  \n  const generateTaxReport = () => {\n    \n    const marketData: Record<string, { buyTotal: number; sellTotal: number; quantity: number }> = {};\n    transactions.forEach((transaction) => {\n      const market = transaction.Market;\n      const type = transaction.Type; // \"BUY\" or \"SELL\"\n      const price = +transaction.Price || 0;\n      const amount = +transaction.Amount || 0;\n  \n      if (!marketData[market]) {\n        marketData[market] = { buyTotal: 0, sellTotal: 0, quantity: 0 };\n      }\n  \n      if (type === \"BUY\") {\n        marketData[market].buyTotal += price * amount;\n        marketData[market].quantity += amount;\n      } else if (type === \"SELL\") {\n        marketData[market].sellTotal += price * amount;\n        marketData[market].quantity -= amount;\n      }\n    });\n  \n    const report = Object.keys(marketData).map((market, index) => {\n      const { buyTotal, sellTotal, quantity } = marketData[market];\n      const profit = sellTotal - buyTotal;\n      const tax = profit * 0.3;\n  \n      let note = '';\n      if (quantity < 0) {\n        note = 'Sell exceeds buy. Please fix transactions.';\n      } else if (quantity === 0 && buyTotal === 0) {\n        note = 'No buy transaction found. Asset might be deposited.';\n      }\n  \n      return {\n        index: index + 1,\n        market,\n        profit: profit.toFixed(2),\n        tax: tax.toFixed(2),\n        remainingQuantity: quantity.toFixed(2),\n        note,\n      };\n    });\n  \n    return report;\n  };\n  \n  \n  const handleCalculateTax = () => {\n    const report = generateTaxReport();\n    console.log(report);\n    setTaxReport(report);\n  };\n  const calculateTax = (purchasePrice: number, sellPrice: number, amount: number) => {\n    if (isNaN(purchasePrice) || isNaN(sellPrice) || isNaN(amount)) {\n      console.log('Invalid purchase price');\n      console.error(\"Invalid data for tax calculation\", { purchasePrice, sellPrice, amount });\n      return NaN;\n    }\n    console.log('Valid purchase price');\n  \n    const profit = (sellPrice - purchasePrice) * amount;\n    const tax = profit * 0.30; // 30% tax rate on profit\n    return tax;\n  };\n\n  const handleFileUpload = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const file = event.target.files?.[0];\n    if (!file) return console.error(\"No file selected\");\n\n    const reader = new FileReader();\n    reader.onload = (e) => {\n      const binaryStr = e.target?.result;\n      if (typeof binaryStr === 'string') {\n        const workbook = XLSX.read(binaryStr, { type: 'binary' });\n        const firstSheetName = workbook.SheetNames[0];\n        const worksheet = workbook.Sheets[firstSheetName];\n        const jsonData = XLSX.utils.sheet_to_json(worksheet, { header: 1 }) as any[][];\n\n        const transactions = processExcelData(jsonData);\n        setTransactions(transactions);\n      }\n    };\n    reader.readAsBinaryString(file);\n  };\n\n  const processExcelData = (jsonData: any[][]): any[] => {\n    const [headers, ...rows] = jsonData;\n    const formattedHeaders = headers.map((header: any) => header.trim().charAt(0).toUpperCase() + header.trim().slice(1));\n    return rows.map((row) => {\n      const transaction: Record<string, any> = {};\n      formattedHeaders.forEach((header, index) => {\n        const value = row[index] || '';\n        transaction[header] = ['Price', 'Total', 'Amount'].includes(header) ? +value : value; // Convert numeric fields\n      });\n      return transaction;\n    });\n  };\n\n  const handleEdit = (transaction: any) => {\n    setIsEditing(true);\n    setEditedTransaction({ ...transaction });\n  };\n\n  const handleSaveEdit = () => {\n    if (editedTransaction) {\n      const updatedTransactions = [...transactions];\n      const index = updatedTransactions.findIndex(\n        (t) => t.Date === editedTransaction.Date && t.Market === editedTransaction.Market\n      );\n      if (index !== -1) {\n        updatedTransactions[index] = editedTransaction;\n      } else {\n        updatedTransactions.push(editedTransaction); // Add as new transaction\n      }\n      setTransactions(updatedTransactions);\n      setIsEditing(false);\n      setEditedTransaction(null);\n    }\n  };\n  \n\n  const handleChange = (\n    e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>,\n    field: string\n  ) => {\n    const target = e.target as HTMLInputElement; // Explicitly cast to HTMLInputElement\n    const { value } = target;\n  \n    setEditedTransaction((prev) => ({\n      ...prev!,\n      [field]: field === 'Amount' || field === 'Total' ? +value : value, // Convert to number for Quantity and Total\n    }));\n  };\n\n  const handleDelete = (transaction: any) => {\n    const updatedTransactions = transactions.filter(\n      (t) => t.Date !== transaction.Date || t.Market !== transaction.Market\n    );\n    setTransactions(updatedTransactions);\n  };\n\n  // const handleCalculateTax = () => {\n  //   return transactions.map((transaction, index) => {\n  //     const price = +transaction.Price || 0; // Ensure numeric\n  //     const total = +transaction.Total || 0; // Ensure numeric\n  //     const amount = +transaction.Amount || 0; // Ensure numeric\n  \n  //     const profit = (total - price) * amount;\n  //     const tax = profit * 0.3; // 30% tax rate\n  \n  //     return {\n  //       index: index + 1,\n  //       profit: isNaN(profit) ? 0 : profit.toFixed(2),\n  //       tax: isNaN(tax) ? 0 : tax.toFixed(2),\n  //     };\n  //   });\n  // };\n\n  return (\n    <Box sx={{ padding: 3 }}>\n      <Typography variant=\"h4\" gutterBottom align=\"center\">\n        Upload Transactions\n      </Typography>\n\n      <Box sx={{ textAlign: 'center', marginBottom: 3 }}>\n        <Button\n          variant=\"contained\"\n          component=\"label\"\n          color=\"primary\"\n          sx={{ padding: '10px 20px', fontSize: '16px' }}\n        >\n          Choose File\n          <input\n            type=\"file\"\n            accept=\".xlsx, .xls\"\n            hidden\n            onChange={handleFileUpload}\n          />\n        </Button>\n      </Box>\n\n      {transactions.length > 0 && (\n        <Box sx={{ marginTop: 4 }}>\n          <Typography variant=\"h5\" gutterBottom align=\"center\">\n            Uploaded Transactions\n          </Typography>\n\n          <TableContainer component={Paper}>\n            <Table sx={{ minWidth: 650 }} aria-label=\"transaction table\">\n              <TableHead>\n                <TableRow>\n                  {Object.keys(transactions[0]).map((key) => (\n                    <TableCell key={key} align=\"center\">{key}</TableCell>\n                  ))}\n                  <TableCell align=\"center\">Actions</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {transactions.map((transaction, idx) => (\n                  <TableRow key={idx}>\n                    {Object.entries(transaction).map(([key, value], index) => {\n                      let displayValue: React.ReactNode = String(value);\n                      if (key === 'Type') {\n                        displayValue = value === 'Sell' ? (\n                          <span style={{ color: 'red', fontWeight: 'bold' }}>SELL</span>\n                        ) : value === 'Buy' ? (\n                          <span style={{ color: 'green', fontWeight: 'bold' }}>BUY</span>\n                        ) : (\n                          String(value)\n                        );\n                      }\n                      return (\n                        <TableCell key={index} align=\"center\">\n                          {displayValue}\n                        </TableCell>\n                      );\n                    })}\n                    <TableCell align=\"center\">\n                      <IconButton onClick={() => handleEdit(transaction)}>\n                        <EditIcon />\n                      </IconButton>\n                      <IconButton onClick={() => handleDelete(transaction)}>\n                        <DeleteIcon />\n                      </IconButton>\n                    </TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </TableContainer>\n\n          {isEditing && editedTransaction && (\n            <Box sx={{ marginTop: 2 }}>\n             <Typography variant=\"h6\" gutterBottom>\n    Edit Transaction\n  </Typography>\n  <Grid container spacing={2}>\n    <Grid item xs={6}>\n      <TextField\n        label=\"Amount\"\n        type=\"number\"\n        value={editedTransaction.Amount}\n        onChange={(e) => handleChange(e, 'Amount')}\n        fullWidth\n      />\n    </Grid>\n    <Grid item xs={6}>\n      <TextField\n        label=\"Price\"\n        type=\"number\"\n        value={editedTransaction.Price}\n        onChange={(e) => handleChange(e, 'Price')}\n        fullWidth\n      />\n    </Grid>\n  </Grid>\n  <Button variant=\"contained\" color=\"primary\" onClick={handleSaveEdit} sx={{ marginTop: 2 }}>\n    Save Changes\n  </Button>\n            </Box>\n          )}\n\n{fixingMarket && (\n  <Box sx={{ marginTop: 4 }}>\n    <Typography variant=\"h6\" gutterBottom>\n      Fix Transaction for Market: {fixingMarket}\n    </Typography>\n    <Grid container spacing={2}>\n      <Grid item xs={6}>\n        <TextField\n          label=\"Type\"\n          select\n          SelectProps={{ native: true }}\n          value={newTransaction.Type}\n          onChange={(e) => setNewTransaction({ ...newTransaction, Type: e.target.value })}\n          fullWidth\n        >\n          <option value=\"BUY\">BUY</option>\n          <option value=\"SELL\">SELL</option>\n        </TextField>\n      </Grid>\n      <Grid item xs={6}>\n        <TextField\n          label=\"Amount\"\n          type=\"number\"\n          value={newTransaction.Amount}\n          onChange={(e) => setNewTransaction({ ...newTransaction, Amount: +e.target.value })}\n          fullWidth\n        />\n      </Grid>\n      <Grid item xs={6}>\n        <TextField\n          label=\"Price\"\n          type=\"number\"\n          value={newTransaction.Price}\n          onChange={(e) => setNewTransaction({ ...newTransaction, Price: +e.target.value })}\n          fullWidth\n        />\n      </Grid>\n      <Grid item xs={6}>\n        <TextField\n          label=\"Fee\"\n          type=\"number\"\n          value={newTransaction.Fee}\n          onChange={(e) => setNewTransaction({ ...newTransaction, Fee: +e.target.value })}\n          fullWidth\n        />\n      </Grid>\n    </Grid>\n    <Button\n      variant=\"contained\"\n      color=\"primary\"\n      onClick={() => handleSaveNewTransaction()}\n      sx={{ marginTop: 2 }}\n    >\n      Save Transaction\n    </Button>\n    <Button\n      variant=\"text\"\n      color=\"secondary\"\n      onClick={() => setFixingMarket(null)}\n      sx={{ marginLeft: 2 }}\n    >\n      Cancel\n    </Button>\n  </Box>\n)}\n\n\n          <Box sx={{ textAlign: 'center', marginTop: 3 }}>\n            <Button variant=\"contained\" color=\"secondary\" onClick={handleCalculateTax}>\n              Calculate Tax\n            </Button>\n          </Box>\n\n          {taxReport.length > 0 && (\n      <Box sx={{ marginTop: 4 }}>\n        <Typography variant=\"h6\" gutterBottom>\n          Tax Report\n        </Typography>\n        <TableContainer component={Paper}>\n          <Table>\n            <TableHead>\n            <TableRow>\n            <TableCell align=\"center\">Transaction</TableCell>\n    <TableCell align=\"center\">Market</TableCell>\n    <TableCell align=\"center\">Profit</TableCell>\n    <TableCell align=\"center\">Tax</TableCell>\n    <TableCell align=\"center\">Remaining Quantity</TableCell>\n    <TableCell align=\"center\">Note</TableCell>\n  </TableRow>\n            </TableHead>\n\n            <TableBody>\n  {taxReport.map(({ index, market, profit, tax, remainingQuantity, note }) => (\n    <TableRow key={index}>\n      <TableCell align=\"center\">{index}</TableCell>\n      <TableCell align=\"center\">{market}</TableCell>\n      <TableCell align=\"center\">{profit}</TableCell>\n      <TableCell align=\"center\">{tax}</TableCell>\n      <TableCell align=\"center\">{remainingQuantity}</TableCell>\n      <TableCell align=\"center\">\n        {note}\n        {note && (\n          <Button\n            variant=\"contained\"\n            color=\"secondary\"\n            size=\"small\"\n            onClick={handleAddTransaction}\n            sx={{ marginLeft: 1 }}\n          >\n            Fix\n          </Button>\n        )}\n      </TableCell>\n    </TableRow>\n  ))}\n</TableBody>\n\n\n          </Table>\n        </TableContainer>\n      </Box>\n    )}\n  </Box>\n      )}\n    </Box>\n  );\n};\n\nexport default UploadTransactions;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}