{"ast":null,"code":"var _jsxFileName = \"/Users/neel/Documents/Tax calculator/taxcalc/crypto-tax-calculator/src/components/UploadTransactions.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport * as XLSX from 'xlsx';\nimport { Button, Typography, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, Box } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// Helper function to calculate tax on profit\nconst calculateTax = (purchasePrice, sellPrice, quantity) => {\n  if (isNaN(purchasePrice) || isNaN(sellPrice) || isNaN(quantity)) {\n    console.error(\"Invalid data for tax calculation\", {\n      purchasePrice,\n      sellPrice,\n      quantity\n    });\n    return NaN;\n  }\n  const profit = (sellPrice - purchasePrice) * quantity;\n  const tax = profit * 0.30; // 30% tax rate on profit\n  return tax;\n};\nconst UploadTransactions = () => {\n  _s();\n  const [transactions, setTransactions] = useState([]);\n  const [isEditing, setIsEditing] = useState(false);\n  const [editedTransaction, setEditedTransaction] = useState(null);\n  const [taxReport, setTaxReport] = useState([]);\n  const handleFileUpload = event => {\n    var _event$target$files;\n    const file = (_event$target$files = event.target.files) === null || _event$target$files === void 0 ? void 0 : _event$target$files[0];\n    if (!file) return console.error(\"No file selected\");\n    const reader = new FileReader();\n    reader.onload = e => {\n      var _e$target;\n      const binaryStr = (_e$target = e.target) === null || _e$target === void 0 ? void 0 : _e$target.result;\n      if (typeof binaryStr === 'string') {\n        const workbook = XLSX.read(binaryStr, {\n          type: 'binary'\n        });\n        const firstSheetName = workbook.SheetNames[0];\n        const worksheet = workbook.Sheets[firstSheetName];\n        const jsonData = XLSX.utils.sheet_to_json(worksheet, {\n          header: 1\n        });\n        const transactions = processExcelData(jsonData);\n        setTransactions(transactions);\n      }\n    };\n    reader.readAsBinaryString(file);\n  };\n  const processExcelData = jsonData => {\n    const [headers, ...rows] = jsonData;\n    const formattedHeaders = headers.map(header => header.trim().charAt(0).toUpperCase() + header.trim().slice(1));\n    return rows.map(row => {\n      const transaction = {};\n      formattedHeaders.forEach((header, index) => {\n        const value = row[index] || '';\n        transaction[header] = ['Price', 'Total', 'Amount'].includes(header) ? +value : value; // Convert numeric fields\n      });\n      return transaction;\n    });\n  };\n  const handleEdit = transaction => {\n    setIsEditing(true);\n    setEditedTransaction({\n      ...transaction\n    });\n  };\n  const handleSaveEdit = () => {\n    if (editedTransaction) {\n      const updatedTransactions = [...transactions];\n      const index = updatedTransactions.findIndex(t => t.Date === editedTransaction.Date && t.Market === editedTransaction.Market);\n      if (index !== -1) {\n        updatedTransactions[index] = editedTransaction;\n        setTransactions(updatedTransactions);\n      }\n      setIsEditing(false);\n      setEditedTransaction(null);\n    }\n  };\n  const handleChange = (e, field) => {\n    const target = e.target; // Explicitly cast to HTMLInputElement\n    const {\n      value\n    } = target;\n    setEditedTransaction(prev => ({\n      ...prev,\n      [field]: field === 'Quantity' || field === 'Total' ? +value : value // Convert to number for Quantity and Total\n    }));\n  };\n  const handleDelete = transaction => {\n    const updatedTransactions = transactions.filter(t => t.Date !== transaction.Date || t.Market !== transaction.Market);\n    setTransactions(updatedTransactions);\n  };\n  const generateTaxReport = () => {\n    return transactions.map((transaction, index) => {\n      const price = +transaction.Price || 0; // Ensure numeric\n      const total = +transaction.Total || 0; // Ensure numeric\n      const quantity = +transaction.Quantity || 0; // Ensure numeric\n\n      const profit = (total - price) * quantity;\n      const tax = profit * 0.3; // 30% tax rate\n\n      return {\n        index: index + 1,\n        profit: isNaN(profit) ? 0 : profit.toFixed(2),\n        tax: isNaN(tax) ? 0 : tax.toFixed(2)\n      };\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"secondary\",\n      onClick: handleCalculateTax,\n      sx: {\n        marginTop: 2\n      },\n      children: \"Calculate Tax\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), taxReport.length > 0 && /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        marginTop: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        gutterBottom: true,\n        children: \"Tax Report\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n        component: Paper,\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"center\",\n                children: \"Transaction Index\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"center\",\n                children: \"Profit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"center\",\n                children: \"Tax\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: taxReport.map(({\n              index,\n              profit,\n              tax\n            }) => /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"center\",\n                children: index\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"center\",\n                children: profit\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"center\",\n                children: tax\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 21\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 5\n  }, this);\n};\n_s(UploadTransactions, \"HPOybgL7MXrNS7UiUgDhmw2Pvf4=\");\n_c = UploadTransactions;\nexport default UploadTransactions;\nvar _c;\n$RefreshReg$(_c, \"UploadTransactions\");","map":{"version":3,"names":["React","useState","XLSX","Button","Typography","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","Box","jsxDEV","_jsxDEV","calculateTax","purchasePrice","sellPrice","quantity","isNaN","console","error","NaN","profit","tax","UploadTransactions","_s","transactions","setTransactions","isEditing","setIsEditing","editedTransaction","setEditedTransaction","taxReport","setTaxReport","handleFileUpload","event","_event$target$files","file","target","files","reader","FileReader","onload","e","_e$target","binaryStr","result","workbook","read","type","firstSheetName","SheetNames","worksheet","Sheets","jsonData","utils","sheet_to_json","header","processExcelData","readAsBinaryString","headers","rows","formattedHeaders","map","trim","charAt","toUpperCase","slice","row","transaction","forEach","index","value","includes","handleEdit","handleSaveEdit","updatedTransactions","findIndex","t","Date","Market","handleChange","field","prev","handleDelete","filter","generateTaxReport","price","Price","total","Total","Quantity","toFixed","children","variant","color","onClick","handleCalculateTax","sx","marginTop","fileName","_jsxFileName","lineNumber","columnNumber","length","gutterBottom","component","align","_c","$RefreshReg$"],"sources":["/Users/neel/Documents/Tax calculator/taxcalc/crypto-tax-calculator/src/components/UploadTransactions.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport * as XLSX from 'xlsx';\nimport { \n  Button, Typography, Table, TableBody, TableCell, TableContainer, \n  TableHead, TableRow, Paper, Box, IconButton, TextField, Grid \n} from '@mui/material';\nimport EditIcon from '@mui/icons-material/Edit';\nimport DeleteIcon from '@mui/icons-material/Delete';\n\ntype EditedTransactionType = {\n  Quantity: number;\n  Total: number;\n  [key: string]: string | number;\n};\n\n// Helper function to calculate tax on profit\nconst calculateTax = (purchasePrice: number, sellPrice: number, quantity: number) => {\n  if (isNaN(purchasePrice) || isNaN(sellPrice) || isNaN(quantity)) {\n    console.error(\"Invalid data for tax calculation\", { purchasePrice, sellPrice, quantity });\n    return NaN;\n  }\n\n  const profit = (sellPrice - purchasePrice) * quantity;\n  const tax = profit * 0.30; // 30% tax rate on profit\n  return tax;\n};\n\nconst UploadTransactions = () => {\n  const [transactions, setTransactions] = useState<any[]>([]);\n  const [isEditing, setIsEditing] = useState<boolean>(false);\n  const [editedTransaction, setEditedTransaction] = useState<EditedTransactionType | null>(null);\n  const [taxReport, setTaxReport] = useState<{ index: number; profit: string; tax: string }[]>([]);\n\n  const handleFileUpload = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const file = event.target.files?.[0];\n    if (!file) return console.error(\"No file selected\");\n\n    const reader = new FileReader();\n    reader.onload = (e) => {\n      const binaryStr = e.target?.result;\n      if (typeof binaryStr === 'string') {\n        const workbook = XLSX.read(binaryStr, { type: 'binary' });\n        const firstSheetName = workbook.SheetNames[0];\n        const worksheet = workbook.Sheets[firstSheetName];\n        const jsonData = XLSX.utils.sheet_to_json(worksheet, { header: 1 }) as any[][];\n\n        const transactions = processExcelData(jsonData);\n        setTransactions(transactions);\n      }\n    };\n    reader.readAsBinaryString(file);\n  };\n\n  const processExcelData = (jsonData: any[][]): any[] => {\n    const [headers, ...rows] = jsonData;\n    const formattedHeaders = headers.map((header: any) => header.trim().charAt(0).toUpperCase() + header.trim().slice(1));\n    return rows.map((row) => {\n      const transaction: Record<string, any> = {};\n      formattedHeaders.forEach((header, index) => {\n        const value = row[index] || '';\n        transaction[header] = ['Price', 'Total', 'Amount'].includes(header) ? +value : value; // Convert numeric fields\n      });\n      return transaction;\n    });\n  };\n\n  const handleEdit = (transaction: any) => {\n    setIsEditing(true);\n    setEditedTransaction({ ...transaction });\n  };\n\n  const handleSaveEdit = () => {\n    if (editedTransaction) {\n      const updatedTransactions = [...transactions];\n      const index = updatedTransactions.findIndex(\n        (t) => t.Date === editedTransaction.Date && t.Market === editedTransaction.Market\n      );\n      if (index !== -1) {\n        updatedTransactions[index] = editedTransaction;\n        setTransactions(updatedTransactions);\n      }\n      setIsEditing(false);\n      setEditedTransaction(null);\n    }\n  };\n\n  const handleChange = (\n    e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>,\n    field: string\n  ) => {\n    const target = e.target as HTMLInputElement; // Explicitly cast to HTMLInputElement\n    const { value } = target;\n  \n    setEditedTransaction((prev) => ({\n      ...prev!,\n      [field]: field === 'Quantity' || field === 'Total' ? +value : value, // Convert to number for Quantity and Total\n    }));\n  };\n\n  const handleDelete = (transaction: any) => {\n    const updatedTransactions = transactions.filter(\n      (t) => t.Date !== transaction.Date || t.Market !== transaction.Market\n    );\n    setTransactions(updatedTransactions);\n  };\n\n  const generateTaxReport = () => {\n    return transactions.map((transaction, index) => {\n      const price = +transaction.Price || 0; // Ensure numeric\n      const total = +transaction.Total || 0; // Ensure numeric\n      const quantity = +transaction.Quantity || 0; // Ensure numeric\n  \n      const profit = (total - price) * quantity;\n      const tax = profit * 0.3; // 30% tax rate\n  \n      return {\n        index: index + 1,\n        profit: isNaN(profit) ? 0 : profit.toFixed(2),\n        tax: isNaN(tax) ? 0 : tax.toFixed(2),\n      };\n    });\n  };\n\n  return (\n    <Box>\n      <Button variant=\"contained\" color=\"secondary\" onClick={handleCalculateTax} sx={{ marginTop: 2 }}>\n        Calculate Tax\n      </Button>\n  \n      {taxReport.length > 0 && (\n        <Box sx={{ marginTop: 4 }}>\n          <Typography variant=\"h6\" gutterBottom>\n            Tax Report\n          </Typography>\n          <TableContainer component={Paper}>\n            <Table>\n              <TableHead>\n                <TableRow>\n                  <TableCell align=\"center\">Transaction Index</TableCell>\n                  <TableCell align=\"center\">Profit</TableCell>\n                  <TableCell align=\"center\">Tax</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {taxReport.map(({ index, profit, tax }) => (\n                  <TableRow key={index}>\n                    <TableCell align=\"center\">{index}</TableCell>\n                    <TableCell align=\"center\">{profit}</TableCell>\n                    <TableCell align=\"center\">{tax}</TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </Box>\n      )}\n    </Box>\n  );\n};\n\nexport default UploadTransactions;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,KAAKC,IAAI,MAAM,MAAM;AAC5B,SACEC,MAAM,EAAEC,UAAU,EAAEC,KAAK,EAAEC,SAAS,EAAEC,SAAS,EAAEC,cAAc,EAC/DC,SAAS,EAAEC,QAAQ,EAAEC,KAAK,EAAEC,GAAG,QAC1B,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAUvB;AACA,MAAMC,YAAY,GAAGA,CAACC,aAAqB,EAAEC,SAAiB,EAAEC,QAAgB,KAAK;EACnF,IAAIC,KAAK,CAACH,aAAa,CAAC,IAAIG,KAAK,CAACF,SAAS,CAAC,IAAIE,KAAK,CAACD,QAAQ,CAAC,EAAE;IAC/DE,OAAO,CAACC,KAAK,CAAC,kCAAkC,EAAE;MAAEL,aAAa;MAAEC,SAAS;MAAEC;IAAS,CAAC,CAAC;IACzF,OAAOI,GAAG;EACZ;EAEA,MAAMC,MAAM,GAAG,CAACN,SAAS,GAAGD,aAAa,IAAIE,QAAQ;EACrD,MAAMM,GAAG,GAAGD,MAAM,GAAG,IAAI,CAAC,CAAC;EAC3B,OAAOC,GAAG;AACZ,CAAC;AAED,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC/B,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAG3B,QAAQ,CAAQ,EAAE,CAAC;EAC3D,MAAM,CAAC4B,SAAS,EAAEC,YAAY,CAAC,GAAG7B,QAAQ,CAAU,KAAK,CAAC;EAC1D,MAAM,CAAC8B,iBAAiB,EAAEC,oBAAoB,CAAC,GAAG/B,QAAQ,CAA+B,IAAI,CAAC;EAC9F,MAAM,CAACgC,SAAS,EAAEC,YAAY,CAAC,GAAGjC,QAAQ,CAAmD,EAAE,CAAC;EAEhG,MAAMkC,gBAAgB,GAAIC,KAA0C,IAAK;IAAA,IAAAC,mBAAA;IACvE,MAAMC,IAAI,IAAAD,mBAAA,GAAGD,KAAK,CAACG,MAAM,CAACC,KAAK,cAAAH,mBAAA,uBAAlBA,mBAAA,CAAqB,CAAC,CAAC;IACpC,IAAI,CAACC,IAAI,EAAE,OAAOlB,OAAO,CAACC,KAAK,CAAC,kBAAkB,CAAC;IAEnD,MAAMoB,MAAM,GAAG,IAAIC,UAAU,CAAC,CAAC;IAC/BD,MAAM,CAACE,MAAM,GAAIC,CAAC,IAAK;MAAA,IAAAC,SAAA;MACrB,MAAMC,SAAS,IAAAD,SAAA,GAAGD,CAAC,CAACL,MAAM,cAAAM,SAAA,uBAARA,SAAA,CAAUE,MAAM;MAClC,IAAI,OAAOD,SAAS,KAAK,QAAQ,EAAE;QACjC,MAAME,QAAQ,GAAG9C,IAAI,CAAC+C,IAAI,CAACH,SAAS,EAAE;UAAEI,IAAI,EAAE;QAAS,CAAC,CAAC;QACzD,MAAMC,cAAc,GAAGH,QAAQ,CAACI,UAAU,CAAC,CAAC,CAAC;QAC7C,MAAMC,SAAS,GAAGL,QAAQ,CAACM,MAAM,CAACH,cAAc,CAAC;QACjD,MAAMI,QAAQ,GAAGrD,IAAI,CAACsD,KAAK,CAACC,aAAa,CAACJ,SAAS,EAAE;UAAEK,MAAM,EAAE;QAAE,CAAC,CAAY;QAE9E,MAAM/B,YAAY,GAAGgC,gBAAgB,CAACJ,QAAQ,CAAC;QAC/C3B,eAAe,CAACD,YAAY,CAAC;MAC/B;IACF,CAAC;IACDc,MAAM,CAACmB,kBAAkB,CAACtB,IAAI,CAAC;EACjC,CAAC;EAED,MAAMqB,gBAAgB,GAAIJ,QAAiB,IAAY;IACrD,MAAM,CAACM,OAAO,EAAE,GAAGC,IAAI,CAAC,GAAGP,QAAQ;IACnC,MAAMQ,gBAAgB,GAAGF,OAAO,CAACG,GAAG,CAAEN,MAAW,IAAKA,MAAM,CAACO,IAAI,CAAC,CAAC,CAACC,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,GAAGT,MAAM,CAACO,IAAI,CAAC,CAAC,CAACG,KAAK,CAAC,CAAC,CAAC,CAAC;IACrH,OAAON,IAAI,CAACE,GAAG,CAAEK,GAAG,IAAK;MACvB,MAAMC,WAAgC,GAAG,CAAC,CAAC;MAC3CP,gBAAgB,CAACQ,OAAO,CAAC,CAACb,MAAM,EAAEc,KAAK,KAAK;QAC1C,MAAMC,KAAK,GAAGJ,GAAG,CAACG,KAAK,CAAC,IAAI,EAAE;QAC9BF,WAAW,CAACZ,MAAM,CAAC,GAAG,CAAC,OAAO,EAAE,OAAO,EAAE,QAAQ,CAAC,CAACgB,QAAQ,CAAChB,MAAM,CAAC,GAAG,CAACe,KAAK,GAAGA,KAAK,CAAC,CAAC;MACxF,CAAC,CAAC;MACF,OAAOH,WAAW;IACpB,CAAC,CAAC;EACJ,CAAC;EAED,MAAMK,UAAU,GAAIL,WAAgB,IAAK;IACvCxC,YAAY,CAAC,IAAI,CAAC;IAClBE,oBAAoB,CAAC;MAAE,GAAGsC;IAAY,CAAC,CAAC;EAC1C,CAAC;EAED,MAAMM,cAAc,GAAGA,CAAA,KAAM;IAC3B,IAAI7C,iBAAiB,EAAE;MACrB,MAAM8C,mBAAmB,GAAG,CAAC,GAAGlD,YAAY,CAAC;MAC7C,MAAM6C,KAAK,GAAGK,mBAAmB,CAACC,SAAS,CACxCC,CAAC,IAAKA,CAAC,CAACC,IAAI,KAAKjD,iBAAiB,CAACiD,IAAI,IAAID,CAAC,CAACE,MAAM,KAAKlD,iBAAiB,CAACkD,MAC7E,CAAC;MACD,IAAIT,KAAK,KAAK,CAAC,CAAC,EAAE;QAChBK,mBAAmB,CAACL,KAAK,CAAC,GAAGzC,iBAAiB;QAC9CH,eAAe,CAACiD,mBAAmB,CAAC;MACtC;MACA/C,YAAY,CAAC,KAAK,CAAC;MACnBE,oBAAoB,CAAC,IAAI,CAAC;IAC5B;EACF,CAAC;EAED,MAAMkD,YAAY,GAAGA,CACnBtC,CAA4D,EAC5DuC,KAAa,KACV;IACH,MAAM5C,MAAM,GAAGK,CAAC,CAACL,MAA0B,CAAC,CAAC;IAC7C,MAAM;MAAEkC;IAAM,CAAC,GAAGlC,MAAM;IAExBP,oBAAoB,CAAEoD,IAAI,KAAM;MAC9B,GAAGA,IAAK;MACR,CAACD,KAAK,GAAGA,KAAK,KAAK,UAAU,IAAIA,KAAK,KAAK,OAAO,GAAG,CAACV,KAAK,GAAGA,KAAK,CAAE;IACvE,CAAC,CAAC,CAAC;EACL,CAAC;EAED,MAAMY,YAAY,GAAIf,WAAgB,IAAK;IACzC,MAAMO,mBAAmB,GAAGlD,YAAY,CAAC2D,MAAM,CAC5CP,CAAC,IAAKA,CAAC,CAACC,IAAI,KAAKV,WAAW,CAACU,IAAI,IAAID,CAAC,CAACE,MAAM,KAAKX,WAAW,CAACW,MACjE,CAAC;IACDrD,eAAe,CAACiD,mBAAmB,CAAC;EACtC,CAAC;EAED,MAAMU,iBAAiB,GAAGA,CAAA,KAAM;IAC9B,OAAO5D,YAAY,CAACqC,GAAG,CAAC,CAACM,WAAW,EAAEE,KAAK,KAAK;MAC9C,MAAMgB,KAAK,GAAG,CAAClB,WAAW,CAACmB,KAAK,IAAI,CAAC,CAAC,CAAC;MACvC,MAAMC,KAAK,GAAG,CAACpB,WAAW,CAACqB,KAAK,IAAI,CAAC,CAAC,CAAC;MACvC,MAAMzE,QAAQ,GAAG,CAACoD,WAAW,CAACsB,QAAQ,IAAI,CAAC,CAAC,CAAC;;MAE7C,MAAMrE,MAAM,GAAG,CAACmE,KAAK,GAAGF,KAAK,IAAItE,QAAQ;MACzC,MAAMM,GAAG,GAAGD,MAAM,GAAG,GAAG,CAAC,CAAC;;MAE1B,OAAO;QACLiD,KAAK,EAAEA,KAAK,GAAG,CAAC;QAChBjD,MAAM,EAAEJ,KAAK,CAACI,MAAM,CAAC,GAAG,CAAC,GAAGA,MAAM,CAACsE,OAAO,CAAC,CAAC,CAAC;QAC7CrE,GAAG,EAAEL,KAAK,CAACK,GAAG,CAAC,GAAG,CAAC,GAAGA,GAAG,CAACqE,OAAO,CAAC,CAAC;MACrC,CAAC;IACH,CAAC,CAAC;EACJ,CAAC;EAED,oBACE/E,OAAA,CAACF,GAAG;IAAAkF,QAAA,gBACFhF,OAAA,CAACX,MAAM;MAAC4F,OAAO,EAAC,WAAW;MAACC,KAAK,EAAC,WAAW;MAACC,OAAO,EAAEC,kBAAmB;MAACC,EAAE,EAAE;QAAEC,SAAS,EAAE;MAAE,CAAE;MAAAN,QAAA,EAAC;IAEjG;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAERvE,SAAS,CAACwE,MAAM,GAAG,CAAC,iBACnB3F,OAAA,CAACF,GAAG;MAACuF,EAAE,EAAE;QAAEC,SAAS,EAAE;MAAE,CAAE;MAAAN,QAAA,gBACxBhF,OAAA,CAACV,UAAU;QAAC2F,OAAO,EAAC,IAAI;QAACW,YAAY;QAAAZ,QAAA,EAAC;MAEtC;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAAC,eACb1F,OAAA,CAACN,cAAc;QAACmG,SAAS,EAAEhG,KAAM;QAAAmF,QAAA,eAC/BhF,OAAA,CAACT,KAAK;UAAAyF,QAAA,gBACJhF,OAAA,CAACL,SAAS;YAAAqF,QAAA,eACRhF,OAAA,CAACJ,QAAQ;cAAAoF,QAAA,gBACPhF,OAAA,CAACP,SAAS;gBAACqG,KAAK,EAAC,QAAQ;gBAAAd,QAAA,EAAC;cAAiB;gBAAAO,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAW,CAAC,eACvD1F,OAAA,CAACP,SAAS;gBAACqG,KAAK,EAAC,QAAQ;gBAAAd,QAAA,EAAC;cAAM;gBAAAO,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAW,CAAC,eAC5C1F,OAAA,CAACP,SAAS;gBAACqG,KAAK,EAAC,QAAQ;gBAAAd,QAAA,EAAC;cAAG;gBAAAO,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAW,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACjC;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACF,CAAC,eACZ1F,OAAA,CAACR,SAAS;YAAAwF,QAAA,EACP7D,SAAS,CAAC+B,GAAG,CAAC,CAAC;cAAEQ,KAAK;cAAEjD,MAAM;cAAEC;YAAI,CAAC,kBACpCV,OAAA,CAACJ,QAAQ;cAAAoF,QAAA,gBACPhF,OAAA,CAACP,SAAS;gBAACqG,KAAK,EAAC,QAAQ;gBAAAd,QAAA,EAAEtB;cAAK;gBAAA6B,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAY,CAAC,eAC7C1F,OAAA,CAACP,SAAS;gBAACqG,KAAK,EAAC,QAAQ;gBAAAd,QAAA,EAAEvE;cAAM;gBAAA8E,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAY,CAAC,eAC9C1F,OAAA,CAACP,SAAS;gBAACqG,KAAK,EAAC,QAAQ;gBAAAd,QAAA,EAAEtE;cAAG;gBAAA6E,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAY,CAAC;YAAA,GAH9BhC,KAAK;cAAA6B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAIV,CACX;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACO,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACP;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACd,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAC9E,EAAA,CAnIID,kBAAkB;AAAAoF,EAAA,GAAlBpF,kBAAkB;AAqIxB,eAAeA,kBAAkB;AAAC,IAAAoF,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}