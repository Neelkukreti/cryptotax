{"ast":null,"code":"var _jsxFileName = \"/Users/neel/Documents/Tax calculator/taxcalc/crypto-tax-calculator/src/components/UploadTransactions.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport * as XLSX from 'xlsx';\nimport { Button, Typography, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, Box, IconButton, TextField, Grid } from '@mui/material';\nimport EditIcon from '@mui/icons-material/Edit';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// Helper function to calculate tax on profit\nconst calculateTax = (purchasePrice, sellPrice, quantity) => {\n  if (isNaN(purchasePrice) || isNaN(sellPrice) || isNaN(quantity)) {\n    console.error(\"Invalid data for tax calculation\", {\n      purchasePrice,\n      sellPrice,\n      quantity\n    });\n    return NaN;\n  }\n  const profit = (sellPrice - purchasePrice) * quantity;\n  const tax = profit * 0.30; // 30% tax rate on profit\n  return tax;\n};\nconst UploadTransactions = () => {\n  _s();\n  const [transactions, setTransactions] = useState([]);\n  const [isEditing, setIsEditing] = useState(false);\n  const [editedTransaction, setEditedTransaction] = useState(null);\n  const [taxReport, setTaxReport] = useState([]);\n  const handleFileUpload = event => {\n    var _event$target$files;\n    const file = (_event$target$files = event.target.files) === null || _event$target$files === void 0 ? void 0 : _event$target$files[0];\n    if (!file) return console.error(\"No file selected\");\n    const reader = new FileReader();\n    reader.onload = e => {\n      var _e$target;\n      const binaryStr = (_e$target = e.target) === null || _e$target === void 0 ? void 0 : _e$target.result;\n      if (typeof binaryStr === 'string') {\n        const workbook = XLSX.read(binaryStr, {\n          type: 'binary'\n        });\n        const firstSheetName = workbook.SheetNames[0];\n        const worksheet = workbook.Sheets[firstSheetName];\n        const jsonData = XLSX.utils.sheet_to_json(worksheet, {\n          header: 1\n        });\n        const transactions = processExcelData(jsonData);\n        setTransactions(transactions);\n      }\n    };\n    reader.readAsBinaryString(file);\n  };\n  const processExcelData = jsonData => {\n    const [headers, ...rows] = jsonData;\n    const formattedHeaders = headers.map(header => header.trim().charAt(0).toUpperCase() + header.trim().slice(1));\n    return rows.map(row => {\n      const transaction = {};\n      formattedHeaders.forEach((header, index) => {\n        const value = row[index] || '';\n        transaction[header] = ['Price', 'Total', 'Amount'].includes(header) ? +value : value; // Convert numeric fields\n      });\n      return transaction;\n    });\n  };\n  const handleEdit = transaction => {\n    setIsEditing(true);\n    setEditedTransaction({\n      ...transaction\n    });\n  };\n  const handleSaveEdit = () => {\n    if (editedTransaction) {\n      const updatedTransactions = [...transactions];\n      const index = updatedTransactions.findIndex(t => t.Date === editedTransaction.Date && t.Market === editedTransaction.Market);\n      if (index !== -1) {\n        updatedTransactions[index] = editedTransaction;\n        setTransactions(updatedTransactions);\n      }\n      setIsEditing(false);\n      setEditedTransaction(null);\n    }\n  };\n  const handleChange = (e, field) => {\n    const target = e.target; // Explicitly cast to HTMLInputElement\n    const {\n      value\n    } = target;\n    setEditedTransaction(prev => ({\n      ...prev,\n      [field]: field === 'Quantity' || field === 'Total' ? +value : value // Convert to number for Quantity and Total\n    }));\n  };\n  const handleDelete = transaction => {\n    const updatedTransactions = transactions.filter(t => t.Date !== transaction.Date || t.Market !== transaction.Market);\n    setTransactions(updatedTransactions);\n  };\n  const handleCalculateTax = () => {\n    const report = transactions.map(transaction => {\n      const {\n        Price,\n        Total,\n        Quantity\n      } = transaction;\n      return calculateTax(Number(Price), Number(Total), Number(Quantity));\n    });\n    setTaxReport(report);\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      padding: 3\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      align: \"center\",\n      children: \"Upload Transactions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        textAlign: 'center',\n        marginBottom: 3\n      },\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        component: \"label\",\n        color: \"primary\",\n        sx: {\n          padding: '10px 20px',\n          fontSize: '16px'\n        },\n        children: [\"Choose File\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \".xlsx, .xls\",\n          hidden: true,\n          onChange: handleFileUpload\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), transactions.length > 0 && /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        marginTop: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        gutterBottom: true,\n        align: \"center\",\n        children: \"Uploaded Transactions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n        component: Paper,\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          sx: {\n            minWidth: 650\n          },\n          \"aria-label\": \"transaction table\",\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [Object.keys(transactions[0]).map(key => /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"center\",\n                children: key\n              }, key, false, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 21\n              }, this)), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"center\",\n                children: \"Actions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: transactions.map((transaction, idx) => /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [Object.entries(transaction).map(([key, value], index) => {\n                let displayValue = String(value);\n                if (key === 'Type') {\n                  displayValue = value === 'Sell' ? /*#__PURE__*/_jsxDEV(\"span\", {\n                    style: {\n                      color: 'red',\n                      fontWeight: 'bold'\n                    },\n                    children: \"SELL\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 161,\n                    columnNumber: 27\n                  }, this) : value === 'Buy' ? /*#__PURE__*/_jsxDEV(\"span\", {\n                    style: {\n                      color: 'green',\n                      fontWeight: 'bold'\n                    },\n                    children: \"BUY\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 163,\n                    columnNumber: 27\n                  }, this) : String(value);\n                }\n                return /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: displayValue\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 169,\n                  columnNumber: 25\n                }, this);\n              }), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"center\",\n                children: [/*#__PURE__*/_jsxDEV(IconButton, {\n                  onClick: () => handleEdit(transaction),\n                  children: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 176,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 175,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                  onClick: () => handleDelete(transaction),\n                  children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 179,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 178,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 21\n              }, this)]\n            }, idx, true, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 11\n      }, this), isEditing && editedTransaction && /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          marginTop: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          gutterBottom: true,\n          children: \"Edit Transaction\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 6,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              type: \"number\",\n              value: editedTransaction.Quantity,\n              onChange: e => handleChange(e, 'Quantity'),\n              fullWidth: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 6,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              type: \"number\",\n              value: editedTransaction.Total,\n              onChange: e => handleChange(e, 'Total'),\n              fullWidth: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: handleSaveEdit,\n          sx: {\n            marginTop: 2\n          },\n          children: \"Save Changes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          textAlign: 'center',\n          marginTop: 3\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"secondary\",\n          onClick: handleCalculateTax,\n          children: \"Calculate Tax\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 11\n      }, this), taxReport.length > 0 && /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          marginTop: 4\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          gutterBottom: true,\n          align: \"center\",\n          children: \"Tax Report\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n          component: Paper,\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            sx: {\n              minWidth: 650\n            },\n            children: [/*#__PURE__*/_jsxDEV(TableHead, {\n              children: /*#__PURE__*/_jsxDEV(TableRow, {\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: \"Transaction Index\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 232,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: \"Profit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 233,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: \"Tax\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 234,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 231,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n              children: taxReport.map((report, index) => /*#__PURE__*/_jsxDEV(TableRow, {\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: index + 1\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 240,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: report.profit.toFixed(2)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 241,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: report.tax.toFixed(2)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 242,\n                  columnNumber: 25\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 239,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this);\n};\n_s(UploadTransactions, \"HPOybgL7MXrNS7UiUgDhmw2Pvf4=\");\n_c = UploadTransactions;\nexport default UploadTransactions;\nvar _c;\n$RefreshReg$(_c, \"UploadTransactions\");","map":{"version":3,"names":["React","useState","XLSX","Button","Typography","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","Box","IconButton","TextField","Grid","EditIcon","DeleteIcon","jsxDEV","_jsxDEV","calculateTax","purchasePrice","sellPrice","quantity","isNaN","console","error","NaN","profit","tax","UploadTransactions","_s","transactions","setTransactions","isEditing","setIsEditing","editedTransaction","setEditedTransaction","taxReport","setTaxReport","handleFileUpload","event","_event$target$files","file","target","files","reader","FileReader","onload","e","_e$target","binaryStr","result","workbook","read","type","firstSheetName","SheetNames","worksheet","Sheets","jsonData","utils","sheet_to_json","header","processExcelData","readAsBinaryString","headers","rows","formattedHeaders","map","trim","charAt","toUpperCase","slice","row","transaction","forEach","index","value","includes","handleEdit","handleSaveEdit","updatedTransactions","findIndex","t","Date","Market","handleChange","field","prev","handleDelete","filter","handleCalculateTax","report","Price","Total","Quantity","Number","sx","padding","children","variant","gutterBottom","align","fileName","_jsxFileName","lineNumber","columnNumber","textAlign","marginBottom","component","color","fontSize","accept","hidden","onChange","length","marginTop","minWidth","Object","keys","key","idx","entries","displayValue","String","style","fontWeight","onClick","container","spacing","item","xs","fullWidth","toFixed","_c","$RefreshReg$"],"sources":["/Users/neel/Documents/Tax calculator/taxcalc/crypto-tax-calculator/src/components/UploadTransactions.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport * as XLSX from 'xlsx';\nimport { \n  Button, Typography, Table, TableBody, TableCell, TableContainer, \n  TableHead, TableRow, Paper, Box, IconButton, TextField, Grid \n} from '@mui/material';\nimport EditIcon from '@mui/icons-material/Edit';\nimport DeleteIcon from '@mui/icons-material/Delete';\n\ntype EditedTransactionType = {\n  Quantity: number;\n  Total: number;\n  [key: string]: string | number;\n};\n\n// Helper function to calculate tax on profit\nconst calculateTax = (purchasePrice: number, sellPrice: number, quantity: number) => {\n  if (isNaN(purchasePrice) || isNaN(sellPrice) || isNaN(quantity)) {\n    console.error(\"Invalid data for tax calculation\", { purchasePrice, sellPrice, quantity });\n    return NaN;\n  }\n\n  const profit = (sellPrice - purchasePrice) * quantity;\n  const tax = profit * 0.30; // 30% tax rate on profit\n  return tax;\n};\n\nconst UploadTransactions = () => {\n  const [transactions, setTransactions] = useState<any[]>([]);\n  const [isEditing, setIsEditing] = useState<boolean>(false);\n  const [editedTransaction, setEditedTransaction] = useState<EditedTransactionType | null>(null);\n  const [taxReport, setTaxReport] = useState<{ profit: number; tax: number }[]>([]);\n\n  const handleFileUpload = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const file = event.target.files?.[0];\n    if (!file) return console.error(\"No file selected\");\n\n    const reader = new FileReader();\n    reader.onload = (e) => {\n      const binaryStr = e.target?.result;\n      if (typeof binaryStr === 'string') {\n        const workbook = XLSX.read(binaryStr, { type: 'binary' });\n        const firstSheetName = workbook.SheetNames[0];\n        const worksheet = workbook.Sheets[firstSheetName];\n        const jsonData = XLSX.utils.sheet_to_json(worksheet, { header: 1 }) as any[][];\n\n        const transactions = processExcelData(jsonData);\n        setTransactions(transactions);\n      }\n    };\n    reader.readAsBinaryString(file);\n  };\n\n  const processExcelData = (jsonData: any[][]): any[] => {\n    const [headers, ...rows] = jsonData;\n    const formattedHeaders = headers.map((header: any) => header.trim().charAt(0).toUpperCase() + header.trim().slice(1));\n    return rows.map((row) => {\n      const transaction: Record<string, any> = {};\n      formattedHeaders.forEach((header, index) => {\n        const value = row[index] || '';\n        transaction[header] = ['Price', 'Total', 'Amount'].includes(header) ? +value : value; // Convert numeric fields\n      });\n      return transaction;\n    });\n  };\n\n  const handleEdit = (transaction: any) => {\n    setIsEditing(true);\n    setEditedTransaction({ ...transaction });\n  };\n\n  const handleSaveEdit = () => {\n    if (editedTransaction) {\n      const updatedTransactions = [...transactions];\n      const index = updatedTransactions.findIndex(\n        (t) => t.Date === editedTransaction.Date && t.Market === editedTransaction.Market\n      );\n      if (index !== -1) {\n        updatedTransactions[index] = editedTransaction;\n        setTransactions(updatedTransactions);\n      }\n      setIsEditing(false);\n      setEditedTransaction(null);\n    }\n  };\n\n  const handleChange = (\n    e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>,\n    field: string\n  ) => {\n    const target = e.target as HTMLInputElement; // Explicitly cast to HTMLInputElement\n    const { value } = target;\n  \n    setEditedTransaction((prev) => ({\n      ...prev!,\n      [field]: field === 'Quantity' || field === 'Total' ? +value : value, // Convert to number for Quantity and Total\n    }));\n  };\n\n  const handleDelete = (transaction: any) => {\n    const updatedTransactions = transactions.filter(\n      (t) => t.Date !== transaction.Date || t.Market !== transaction.Market\n    );\n    setTransactions(updatedTransactions);\n  };\n\n  const handleCalculateTax = () => {\n    const report = transactions.map((transaction) => {\n      const { Price, Total, Quantity } = transaction;\n      return calculateTax(Number(Price), Number(Total), Number(Quantity));\n    });\n    setTaxReport(report);\n  };\n\n  return (\n    <Box sx={{ padding: 3 }}>\n      <Typography variant=\"h4\" gutterBottom align=\"center\">\n        Upload Transactions\n      </Typography>\n\n      <Box sx={{ textAlign: 'center', marginBottom: 3 }}>\n        <Button\n          variant=\"contained\"\n          component=\"label\"\n          color=\"primary\"\n          sx={{ padding: '10px 20px', fontSize: '16px' }}\n        >\n          Choose File\n          <input\n            type=\"file\"\n            accept=\".xlsx, .xls\"\n            hidden\n            onChange={handleFileUpload}\n          />\n        </Button>\n      </Box>\n\n      {transactions.length > 0 && (\n        <Box sx={{ marginTop: 4 }}>\n          <Typography variant=\"h5\" gutterBottom align=\"center\">\n            Uploaded Transactions\n          </Typography>\n\n          <TableContainer component={Paper}>\n            <Table sx={{ minWidth: 650 }} aria-label=\"transaction table\">\n              <TableHead>\n                <TableRow>\n                  {Object.keys(transactions[0]).map((key) => (\n                    <TableCell key={key} align=\"center\">{key}</TableCell>\n                  ))}\n                  <TableCell align=\"center\">Actions</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {transactions.map((transaction, idx) => (\n                  <TableRow key={idx}>\n                    {Object.entries(transaction).map(([key, value], index) => {\n                      let displayValue: React.ReactNode = String(value);\n                      if (key === 'Type') {\n                        displayValue = value === 'Sell' ? (\n                          <span style={{ color: 'red', fontWeight: 'bold' }}>SELL</span>\n                        ) : value === 'Buy' ? (\n                          <span style={{ color: 'green', fontWeight: 'bold' }}>BUY</span>\n                        ) : (\n                          String(value)\n                        );\n                      }\n                      return (\n                        <TableCell key={index} align=\"center\">\n                          {displayValue}\n                        </TableCell>\n                      );\n                    })}\n                    <TableCell align=\"center\">\n                      <IconButton onClick={() => handleEdit(transaction)}>\n                        <EditIcon />\n                      </IconButton>\n                      <IconButton onClick={() => handleDelete(transaction)}>\n                        <DeleteIcon />\n                      </IconButton>\n                    </TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </TableContainer>\n\n          {isEditing && editedTransaction && (\n            <Box sx={{ marginTop: 2 }}>\n              <Typography variant=\"h6\" gutterBottom>\n                Edit Transaction\n              </Typography>\n              <Grid container spacing={2}>\n                <Grid item xs={6}>\n                  <TextField\n                    type=\"number\"\n                    value={editedTransaction.Quantity}\n                    onChange={(e) => handleChange(e, 'Quantity')}\n                    fullWidth\n                  />\n                </Grid>\n                <Grid item xs={6}>\n                  <TextField\n                    type=\"number\"\n                    value={editedTransaction.Total}\n                    onChange={(e) => handleChange(e, 'Total')}\n                    fullWidth\n                  />\n                </Grid>\n              </Grid>\n              <Button variant=\"contained\" color=\"primary\" onClick={handleSaveEdit} sx={{ marginTop: 2 }}>\n                Save Changes\n              </Button>\n            </Box>\n          )}\n\n          <Box sx={{ textAlign: 'center', marginTop: 3 }}>\n            <Button variant=\"contained\" color=\"secondary\" onClick={handleCalculateTax}>\n              Calculate Tax\n            </Button>\n          </Box>\n\n          {taxReport.length > 0 && (\n            <Box sx={{ marginTop: 4 }}>\n              <Typography variant=\"h5\" gutterBottom align=\"center\">\n                Tax Report\n              </Typography>\n              <TableContainer component={Paper}>\n                <Table sx={{ minWidth: 650 }}>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell align=\"center\">Transaction Index</TableCell>\n                      <TableCell align=\"center\">Profit</TableCell>\n                      <TableCell align=\"center\">Tax</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {taxReport.map((report, index) => (\n                      <TableRow key={index}>\n                        <TableCell align=\"center\">{index + 1}</TableCell>\n                        <TableCell align=\"center\">{report.profit.toFixed(2)}</TableCell>\n                        <TableCell align=\"center\">{report.tax.toFixed(2)}</TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              </TableContainer>\n            </Box>\n          )}\n        </Box>\n      )}\n    </Box>\n  );\n};\n\nexport default UploadTransactions;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}