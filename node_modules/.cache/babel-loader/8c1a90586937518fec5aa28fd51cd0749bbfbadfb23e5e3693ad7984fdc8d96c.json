{"ast":null,"code":"var _jsxFileName = \"/Users/neel/Documents/Tax calculator/taxcalc/crypto-tax-calculator/src/components/UploadTransactions.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Box, Button, Typography } from \"@mui/material\";\nimport * as XLSX from \"xlsx\";\nimport TransactionsTable from \"./TransactionsTable\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UploadTransactions = () => {\n  _s();\n  const [groupedTransactions, setGroupedTransactions] = useState({});\n  const handleFileUpload = e => {\n    var _e$target$files;\n    const file = (_e$target$files = e.target.files) === null || _e$target$files === void 0 ? void 0 : _e$target$files[0];\n    if (!file) return;\n    const reader = new FileReader();\n    reader.onload = event => {\n      var _event$target;\n      const binaryStr = (_event$target = event.target) === null || _event$target === void 0 ? void 0 : _event$target.result;\n      const workbook = XLSX.read(binaryStr, {\n        type: \"binary\"\n      });\n      const sheetName = workbook.SheetNames[0];\n      const sheetData = XLSX.utils.sheet_to_json(workbook.Sheets[sheetName]);\n      processTransactions(sheetData);\n    };\n    reader.readAsBinaryString(file);\n  };\n  const processTransactions = data => {\n    const grouped = data.reduce((acc, curr) => {\n      const market = curr.market || \"Unknown\";\n      acc[market] = acc[market] || [];\n      acc[market].push(curr);\n      return acc;\n    }, {});\n    setGroupedTransactions(grouped);\n  };\n  const handleEditTransaction = (coin, index, field, value) => {\n    const updatedTransactions = {\n      ...groupedTransactions\n    };\n    if (updatedTransactions[coin]) {\n      updatedTransactions[coin][index][field] = value;\n    }\n    setGroupedTransactions(updatedTransactions);\n  };\n  const handleDeleteTransaction = (coin, index) => {\n    const updatedTransactions = {\n      ...groupedTransactions\n    };\n    if (updatedTransactions[coin]) {\n      updatedTransactions[coin] = updatedTransactions[coin].filter((_, i) => i !== index);\n    }\n    setGroupedTransactions(updatedTransactions);\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      padding: 3\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      gutterBottom: true,\n      children: \"Upload Transactions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mb: 3\n      },\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        component: \"label\",\n        color: \"primary\",\n        children: [\"Upload Transactions File\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          hidden: true,\n          accept: \".xlsx, .xls\",\n          onChange: handleFileUpload\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TransactionsTable, {\n      groupedTransactions: groupedTransactions,\n      onEditTransaction: handleEditTransaction,\n      onDeleteTransaction: handleDeleteTransaction\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n_s(UploadTransactions, \"/A7TTXCyg9fDOXjREouoZECnTEA=\");\n_c = UploadTransactions;\nexport default UploadTransactions;\nvar _c;\n$RefreshReg$(_c, \"UploadTransactions\");","map":{"version":3,"names":["React","useState","Box","Button","Typography","XLSX","TransactionsTable","jsxDEV","_jsxDEV","UploadTransactions","_s","groupedTransactions","setGroupedTransactions","handleFileUpload","e","_e$target$files","file","target","files","reader","FileReader","onload","event","_event$target","binaryStr","result","workbook","read","type","sheetName","SheetNames","sheetData","utils","sheet_to_json","Sheets","processTransactions","readAsBinaryString","data","grouped","reduce","acc","curr","market","push","handleEditTransaction","coin","index","field","value","updatedTransactions","handleDeleteTransaction","filter","_","i","sx","padding","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","mb","component","color","hidden","accept","onChange","onEditTransaction","onDeleteTransaction","_c","$RefreshReg$"],"sources":["/Users/neel/Documents/Tax calculator/taxcalc/crypto-tax-calculator/src/components/UploadTransactions.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Box, Button, Typography } from \"@mui/material\";\nimport * as XLSX from \"xlsx\";\nimport TransactionsTable from \"./TransactionsTable\";\n\ninterface Transaction {\n  date: string;\n  market: string;\n  type: string;\n  price: number;\n  amount: number;\n  total: number;\n}\n\nconst UploadTransactions: React.FC = () => {\n  const [groupedTransactions, setGroupedTransactions] = useState<{\n    [key: string]: Transaction[];\n  }>({});\n\n  const handleFileUpload = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const file = e.target.files?.[0];\n    if (!file) return;\n\n    const reader = new FileReader();\n    reader.onload = (event) => {\n      const binaryStr = event.target?.result;\n      const workbook = XLSX.read(binaryStr, { type: \"binary\" });\n      const sheetName = workbook.SheetNames[0];\n      const sheetData: Transaction[] = XLSX.utils.sheet_to_json(\n        workbook.Sheets[sheetName]\n      );\n      processTransactions(sheetData);\n    };\n    reader.readAsBinaryString(file);\n  };\n\n  const processTransactions = (data: Transaction[]) => {\n    const grouped = data.reduce((acc, curr) => {\n      const market = curr.market || \"Unknown\";\n      acc[market] = acc[market] || [];\n      acc[market].push(curr);\n      return acc;\n    }, {} as { [key: string]: Transaction[] });\n    setGroupedTransactions(grouped);\n  };\n\n  const handleEditTransaction = (\n    coin: string,\n    index: number,\n    field: keyof Transaction,\n    value: number\n  ) => {\n    const updatedTransactions = { ...groupedTransactions };\n    if (updatedTransactions[coin]) {\n      updatedTransactions[coin][index][field] = value;\n    }\n    setGroupedTransactions(updatedTransactions);\n  };\n\n  const handleDeleteTransaction = (coin: string, index: number) => {\n    const updatedTransactions = { ...groupedTransactions };\n    if (updatedTransactions[coin]) {\n      updatedTransactions[coin] = updatedTransactions[coin].filter(\n        (_, i) => i !== index\n      );\n    }\n    setGroupedTransactions(updatedTransactions);\n  };\n\n  return (\n    <Box sx={{ padding: 3 }}>\n      <Typography variant=\"h5\" gutterBottom>\n        Upload Transactions\n      </Typography>\n      <Box sx={{ mb: 3 }}>\n        <Button variant=\"contained\" component=\"label\" color=\"primary\">\n          Upload Transactions File\n          <input\n            type=\"file\"\n            hidden\n            accept=\".xlsx, .xls\"\n            onChange={handleFileUpload}\n          />\n        </Button>\n      </Box>\n      <TransactionsTable\n        groupedTransactions={groupedTransactions}\n        onEditTransaction={handleEditTransaction}\n        onDeleteTransaction={handleDeleteTransaction}\n      />\n    </Box>\n  );\n};\n\nexport default UploadTransactions;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}