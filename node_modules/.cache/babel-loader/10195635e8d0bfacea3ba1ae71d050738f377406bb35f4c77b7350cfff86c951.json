{"ast":null,"code":"export const calculateSpotTax = (sellingPrice, purchasePrice, tdsPaid, surchargeRate = 0) => {\n  const profit = sellingPrice - purchasePrice;\n  const taxLiability = profit * 0.3; // 30% tax\n  const surcharge = taxLiability * (surchargeRate / 100);\n  const cess = (taxLiability + surcharge) * 0.04; // 4% cess\n  const totalTax = taxLiability + surcharge + cess;\n  const taxPayable = totalTax - tdsPaid;\n  return {\n    taxLiability,\n    surcharge,\n    cess,\n    taxPayable\n  };\n};\nexport const calculateFuturesTax = (sellingPrice, purchasePrice, fees, expenses, taxRate) => {\n  const netProfit = sellingPrice - purchasePrice - fees - expenses;\n  const taxLiability = netProfit * (taxRate / 100);\n  const cess = taxLiability * 0.04; // 4% cess\n  const totalTax = taxLiability + cess;\n  return {\n    netProfit,\n    taxLiability,\n    cess,\n    totalTax\n  };\n};","map":{"version":3,"names":["calculateSpotTax","sellingPrice","purchasePrice","tdsPaid","surchargeRate","profit","taxLiability","surcharge","cess","totalTax","taxPayable","calculateFuturesTax","fees","expenses","taxRate","netProfit"],"sources":["/Users/neel/Documents/Tax calculator/taxcalc/crypto-tax-calculator/src/components/TaxUtils.tsx"],"sourcesContent":["export const calculateSpotTax = (\n    sellingPrice: number,\n    purchasePrice: number,\n    tdsPaid: number,\n    surchargeRate: number = 0\n  ) => {\n    const profit = sellingPrice - purchasePrice;\n    const taxLiability = profit * 0.3; // 30% tax\n    const surcharge = taxLiability * (surchargeRate / 100);\n    const cess = (taxLiability + surcharge) * 0.04; // 4% cess\n    const totalTax = taxLiability + surcharge + cess;\n    const taxPayable = totalTax - tdsPaid;\n  \n    return { taxLiability, surcharge, cess, taxPayable };\n  };\n  \n  export const calculateFuturesTax = (\n    sellingPrice: number,\n    purchasePrice: number,\n    fees: number,\n    expenses: number,\n    taxRate: number\n  ) => {\n    const netProfit = sellingPrice - purchasePrice - fees - expenses;\n    const taxLiability = netProfit * (taxRate / 100);\n    const cess = taxLiability * 0.04; // 4% cess\n    const totalTax = taxLiability + cess;\n  \n    return { netProfit, taxLiability, cess, totalTax };\n  };\n  "],"mappings":"AAAA,OAAO,MAAMA,gBAAgB,GAAGA,CAC5BC,YAAoB,EACpBC,aAAqB,EACrBC,OAAe,EACfC,aAAqB,GAAG,CAAC,KACtB;EACH,MAAMC,MAAM,GAAGJ,YAAY,GAAGC,aAAa;EAC3C,MAAMI,YAAY,GAAGD,MAAM,GAAG,GAAG,CAAC,CAAC;EACnC,MAAME,SAAS,GAAGD,YAAY,IAAIF,aAAa,GAAG,GAAG,CAAC;EACtD,MAAMI,IAAI,GAAG,CAACF,YAAY,GAAGC,SAAS,IAAI,IAAI,CAAC,CAAC;EAChD,MAAME,QAAQ,GAAGH,YAAY,GAAGC,SAAS,GAAGC,IAAI;EAChD,MAAME,UAAU,GAAGD,QAAQ,GAAGN,OAAO;EAErC,OAAO;IAAEG,YAAY;IAAEC,SAAS;IAAEC,IAAI;IAAEE;EAAW,CAAC;AACtD,CAAC;AAED,OAAO,MAAMC,mBAAmB,GAAGA,CACjCV,YAAoB,EACpBC,aAAqB,EACrBU,IAAY,EACZC,QAAgB,EAChBC,OAAe,KACZ;EACH,MAAMC,SAAS,GAAGd,YAAY,GAAGC,aAAa,GAAGU,IAAI,GAAGC,QAAQ;EAChE,MAAMP,YAAY,GAAGS,SAAS,IAAID,OAAO,GAAG,GAAG,CAAC;EAChD,MAAMN,IAAI,GAAGF,YAAY,GAAG,IAAI,CAAC,CAAC;EAClC,MAAMG,QAAQ,GAAGH,YAAY,GAAGE,IAAI;EAEpC,OAAO;IAAEO,SAAS;IAAET,YAAY;IAAEE,IAAI;IAAEC;EAAS,CAAC;AACpD,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}