{"ast":null,"code":"var _jsxFileName = \"/Users/neel/Documents/Tax calculator/taxcalc/crypto-tax-calculator/src/components/UploadTransactions.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport * as XLSX from 'xlsx';\nimport { Button, Typography, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, Box, IconButton, TextField, Grid } from '@mui/material';\nimport EditIcon from '@mui/icons-material/Edit';\nimport DeleteIcon from '@mui/icons-material/Delete';\n\n// Helper function to calculate tax on profit\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst calculateTax = (purchasePrice, sellPrice, quantity) => {\n  const profit = (sellPrice - purchasePrice) * quantity;\n  const tax = profit * 0.30; // 30% tax rate on profit\n  return tax;\n};\nconst UploadTransactions = () => {\n  _s();\n  const [transactions, setTransactions] = useState([]);\n  const [isEditing, setIsEditing] = useState(false);\n  const [editedTransaction, setEditedTransaction] = useState(null);\n\n  // Handle file upload\n  const handleFileUpload = event => {\n    var _event$target$files;\n    const file = (_event$target$files = event.target.files) === null || _event$target$files === void 0 ? void 0 : _event$target$files[0];\n    if (!file) {\n      console.error(\"No file selected\");\n      return;\n    }\n    const reader = new FileReader();\n    reader.onload = e => {\n      var _e$target;\n      const binaryStr = (_e$target = e.target) === null || _e$target === void 0 ? void 0 : _e$target.result;\n      if (typeof binaryStr === 'string') {\n        const workbook = XLSX.read(binaryStr, {\n          type: 'binary'\n        });\n        const firstSheetName = workbook.SheetNames[0];\n        const worksheet = workbook.Sheets[firstSheetName];\n        const jsonData = XLSX.utils.sheet_to_json(worksheet, {\n          header: 1\n        });\n        const transactions = processExcelData(jsonData);\n        setTransactions(transactions);\n      }\n    };\n    reader.readAsBinaryString(file);\n  };\n\n  // Process Excel data and return transaction objects\n  const processExcelData = jsonData => {\n    const [headers, ...rows] = jsonData;\n    const formattedHeaders = headers.map(header => header.trim().charAt(0).toUpperCase() + header.trim().slice(1));\n    return rows.map(row => {\n      const transaction = {};\n      formattedHeaders.forEach((header, index) => {\n        transaction[header] = row[index] || '';\n      });\n      return transaction;\n    });\n  };\n\n  // Edit transaction\n  const handleEdit = transaction => {\n    setIsEditing(true);\n    setEditedTransaction({\n      ...transaction\n    });\n  };\n\n  // Save the edited transaction\n  const handleSaveEdit = () => {\n    const updatedTransactions = [...transactions];\n    const index = updatedTransactions.findIndex(t => t.Date === (editedTransaction === null || editedTransaction === void 0 ? void 0 : editedTransaction.Date) && t.Market === (editedTransaction === null || editedTransaction === void 0 ? void 0 : editedTransaction.Market));\n    if (index !== -1) {\n      updatedTransactions[index] = editedTransaction;\n      setTransactions(updatedTransactions);\n      setIsEditing(false);\n      setEditedTransaction(null);\n    }\n  };\n\n  // Handle changes to editable fields\n  const handleChange = (e, field) => {\n    if (editedTransaction && e.target instanceof HTMLInputElement) {\n      setEditedTransaction({\n        ...editedTransaction,\n        [field]: field === \"Quantity\" || field === \"Price\" || field === \"Total\" ? parseFloat(e.target.value) : e.target.value\n      });\n    }\n  };\n\n  // Handle delete transaction\n  const handleDelete = transaction => {\n    const updatedTransactions = transactions.filter(t => t.Date !== transaction.Date || t.Market !== transaction.Market);\n    setTransactions(updatedTransactions);\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      padding: 3\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      align: \"center\",\n      children: \"Upload Transactions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        textAlign: 'center',\n        marginBottom: 3\n      },\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        component: \"label\",\n        color: \"primary\",\n        sx: {\n          padding: '10px 20px',\n          fontSize: '16px'\n        },\n        children: [\"Choose File\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \".xlsx, .xls\",\n          hidden: true,\n          onChange: handleFileUpload\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), transactions.length > 0 && /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        marginTop: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        gutterBottom: true,\n        align: \"center\",\n        children: \"Uploaded Transactions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n        component: Paper,\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          sx: {\n            minWidth: 650\n          },\n          \"aria-label\": \"transaction table\",\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [Object.keys(transactions[0]).map(key => /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"center\",\n                children: key\n              }, key, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 21\n              }, this)), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"center\",\n                children: \"Actions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: transactions.map((transaction, idx) => {\n              // Calculate profit and tax for each transaction\n              const tax = calculateTax(transaction.Price, transaction.Total, transaction.Quantity);\n              return /*#__PURE__*/_jsxDEV(TableRow, {\n                children: [Object.entries(transaction).map(([key, value], index) => {\n                  // Safely type-cast value to string or number\n                  let displayValue = String(value);\n                  if (key === 'Type') {\n                    displayValue = value === 'Sell' ? /*#__PURE__*/_jsxDEV(\"span\", {\n                      style: {\n                        color: 'red',\n                        textTransform: 'uppercase'\n                      },\n                      children: \"SELL\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 147,\n                      columnNumber: 9\n                    }, this) : value === 'Buy' ? /*#__PURE__*/_jsxDEV(\"span\", {\n                      style: {\n                        color: 'green',\n                        textTransform: 'uppercase'\n                      },\n                      children: \"BUY\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 149,\n                      columnNumber: 9\n                    }, this) : String(value);\n                  }\n                  return /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"center\",\n                    children: displayValue\n                  }, index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 156,\n                    columnNumber: 5\n                  }, this);\n                }), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: [/*#__PURE__*/_jsxDEV(IconButton, {\n                    onClick: () => handleEdit(transaction),\n                    children: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 164,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 163,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                    onClick: () => handleDelete(transaction),\n                    children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 167,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 166,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 162,\n                  columnNumber: 23\n                }, this)]\n              }, idx, true, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }, this), isEditing && editedTransaction && /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          marginTop: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          gutterBottom: true,\n          children: \"Edit Transaction\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 6,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Quantity\",\n              type: \"number\",\n              value: editedTransaction.Quantity,\n              onChange: e => handleChange(e, 'Quantity'),\n              fullWidth: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 6,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Total\",\n              type: \"number\",\n              value: editedTransaction.Total,\n              onChange: e => handleChange(e, 'Total'),\n              fullWidth: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: handleSaveEdit,\n          sx: {\n            marginTop: 2\n          },\n          children: \"Save Changes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n};\n_s(UploadTransactions, \"wM51ciGlOux22zJ1hRdoAkGTXFA=\");\n_c = UploadTransactions;\nexport default UploadTransactions;\nvar _c;\n$RefreshReg$(_c, \"UploadTransactions\");","map":{"version":3,"names":["React","useState","XLSX","Button","Typography","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","Box","IconButton","TextField","Grid","EditIcon","DeleteIcon","jsxDEV","_jsxDEV","calculateTax","purchasePrice","sellPrice","quantity","profit","tax","UploadTransactions","_s","transactions","setTransactions","isEditing","setIsEditing","editedTransaction","setEditedTransaction","handleFileUpload","event","_event$target$files","file","target","files","console","error","reader","FileReader","onload","e","_e$target","binaryStr","result","workbook","read","type","firstSheetName","SheetNames","worksheet","Sheets","jsonData","utils","sheet_to_json","header","processExcelData","readAsBinaryString","headers","rows","formattedHeaders","map","trim","charAt","toUpperCase","slice","row","transaction","forEach","index","handleEdit","handleSaveEdit","updatedTransactions","findIndex","t","Date","Market","handleChange","field","HTMLInputElement","parseFloat","value","handleDelete","filter","sx","padding","children","variant","gutterBottom","align","fileName","_jsxFileName","lineNumber","columnNumber","textAlign","marginBottom","component","color","fontSize","accept","hidden","onChange","length","marginTop","minWidth","Object","keys","key","idx","Price","Total","Quantity","entries","displayValue","String","style","textTransform","onClick","container","spacing","item","xs","label","fullWidth","_c","$RefreshReg$"],"sources":["/Users/neel/Documents/Tax calculator/taxcalc/crypto-tax-calculator/src/components/UploadTransactions.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport * as XLSX from 'xlsx';\nimport { Button, Typography, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, Box, IconButton, TextField, Grid } from '@mui/material';\nimport EditIcon from '@mui/icons-material/Edit';\nimport DeleteIcon from '@mui/icons-material/Delete';\n\n// Helper function to calculate tax on profit\nconst calculateTax = (purchasePrice: number, sellPrice: number, quantity: number) => {\n  const profit = (sellPrice - purchasePrice) * quantity;\n  const tax = profit * 0.30; // 30% tax rate on profit\n  return tax;\n};\n\nconst UploadTransactions = () => {\n  const [transactions, setTransactions] = useState<any[]>([]);\n  const [isEditing, setIsEditing] = useState<boolean>(false);\n  const [editedTransaction, setEditedTransaction] = useState<any | null>(null);\n\n  // Handle file upload\n  const handleFileUpload = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const file = event.target.files?.[0];\n\n    if (!file) {\n      console.error(\"No file selected\");\n      return;\n    }\n\n    const reader = new FileReader();\n\n    reader.onload = (e) => {\n      const binaryStr = e.target?.result;\n      if (typeof binaryStr === 'string') {\n        const workbook = XLSX.read(binaryStr, { type: 'binary' });\n        const firstSheetName = workbook.SheetNames[0];\n        const worksheet = workbook.Sheets[firstSheetName];\n        const jsonData = XLSX.utils.sheet_to_json(worksheet, { header: 1 }) as any[][];\n\n        const transactions = processExcelData(jsonData);\n        setTransactions(transactions);\n      }\n    };\n\n    reader.readAsBinaryString(file);\n  };\n\n  // Process Excel data and return transaction objects\n  const processExcelData = (jsonData: any[][]): any[] => {\n    const [headers, ...rows] = jsonData;\n    const formattedHeaders = headers.map((header: any) => header.trim().charAt(0).toUpperCase() + header.trim().slice(1));\n\n    return rows.map((row) => {\n      const transaction: Record<string, any> = {};\n      formattedHeaders.forEach((header, index) => {\n        transaction[header] = row[index] || '';\n      });\n      return transaction;\n    });\n  };\n\n  // Edit transaction\n  const handleEdit = (transaction: any) => {\n    setIsEditing(true);\n    setEditedTransaction({ ...transaction });\n  };\n\n  // Save the edited transaction\n  const handleSaveEdit = () => {\n    const updatedTransactions = [...transactions];\n    const index = updatedTransactions.findIndex((t) => t.Date === editedTransaction?.Date && t.Market === editedTransaction?.Market);\n    if (index !== -1) {\n      updatedTransactions[index] = editedTransaction!;\n      setTransactions(updatedTransactions);\n      setIsEditing(false);\n      setEditedTransaction(null);\n    }\n  };\n\n  // Handle changes to editable fields\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>, field: string) => {\n    if (editedTransaction && e.target instanceof HTMLInputElement) {\n      setEditedTransaction({\n        ...editedTransaction,\n        [field]: field === \"Quantity\" || field === \"Price\" || field === \"Total\" ? parseFloat(e.target.value) : e.target.value,\n      });\n    }\n  };\n\n  // Handle delete transaction\n  const handleDelete = (transaction: any) => {\n    const updatedTransactions = transactions.filter((t) => t.Date !== transaction.Date || t.Market !== transaction.Market);\n    setTransactions(updatedTransactions);\n  };\n\n  return (\n    <Box sx={{ padding: 3 }}>\n      <Typography variant=\"h4\" gutterBottom align=\"center\">\n        Upload Transactions\n      </Typography>\n\n      <Box sx={{ textAlign: 'center', marginBottom: 3 }}>\n        <Button\n          variant=\"contained\"\n          component=\"label\"\n          color=\"primary\"\n          sx={{ padding: '10px 20px', fontSize: '16px' }}\n        >\n          Choose File\n          <input\n            type=\"file\"\n            accept=\".xlsx, .xls\"\n            hidden\n            onChange={handleFileUpload}\n          />\n        </Button>\n      </Box>\n\n      {/* Display Table if there are transactions */}\n      {transactions.length > 0 && (\n        <Box sx={{ marginTop: 4 }}>\n          <Typography variant=\"h5\" gutterBottom align=\"center\">\n            Uploaded Transactions\n          </Typography>\n\n          <TableContainer component={Paper}>\n            <Table sx={{ minWidth: 650 }} aria-label=\"transaction table\">\n              <TableHead>\n                <TableRow>\n                  {Object.keys(transactions[0]).map((key) => (\n                    <TableCell key={key} align=\"center\">{key}</TableCell>\n                  ))}\n                  <TableCell align=\"center\">Actions</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {transactions.map((transaction, idx) => {\n                  // Calculate profit and tax for each transaction\n                  const tax = calculateTax(transaction.Price, transaction.Total, transaction.Quantity);\n                  return (\n                    <TableRow key={idx}>\n                     {Object.entries(transaction).map(([key, value], index) => {\n  // Safely type-cast value to string or number\n  let displayValue: React.ReactNode = String(value);\n\n  if (key === 'Type') {\n    displayValue =\n      value === 'Sell' ? (\n        <span style={{ color: 'red', textTransform: 'uppercase' }}>SELL</span>\n      ) : value === 'Buy' ? (\n        <span style={{ color: 'green', textTransform: 'uppercase' }}>BUY</span>\n      ) : (\n        String(value)\n      );\n  }\n\n  return (\n    <TableCell key={index} align=\"center\">\n      {displayValue}\n    </TableCell>\n  );\n})}\n\n                      <TableCell align=\"center\">\n                        <IconButton onClick={() => handleEdit(transaction)}>\n                          <EditIcon />\n                        </IconButton>\n                        <IconButton onClick={() => handleDelete(transaction)}>\n                          <DeleteIcon />\n                        </IconButton>\n                      </TableCell>\n                    </TableRow>\n                  );\n                })}\n              </TableBody>\n            </Table>\n          </TableContainer>\n\n          {/* Edit Transaction Dialog */}\n          {isEditing && editedTransaction && (\n            <Box sx={{ marginTop: 2 }}>\n              <Typography variant=\"h6\" gutterBottom>\n                Edit Transaction\n              </Typography>\n              <Grid container spacing={2}>\n                <Grid item xs={6}>\n                  <TextField\n                    label=\"Quantity\"\n                    type=\"number\"\n                    value={editedTransaction.Quantity}\n                    onChange={(e) => handleChange(e, 'Quantity')}\n                    fullWidth\n                  />\n                </Grid>\n                <Grid item xs={6}>\n                  <TextField\n                    label=\"Total\"\n                    type=\"number\"\n                    value={editedTransaction.Total}\n                    onChange={(e) => handleChange(e, 'Total')}\n                    fullWidth\n                  />\n                </Grid>\n              </Grid>\n              <Button variant=\"contained\" color=\"primary\" onClick={handleSaveEdit} sx={{ marginTop: 2 }}>\n                Save Changes\n              </Button>\n            </Box>\n          )}\n        </Box>\n      )}\n    </Box>\n  );\n};\n\nexport default UploadTransactions;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}