{"ast":null,"code":"var _jsxFileName = \"/Users/neel/Documents/Tax calculator/taxcalc/crypto-tax-calculator/src/components/UploadTransactions.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport * as XLSX from 'xlsx';\nimport { Button, Typography, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, Box, IconButton, TextField, Grid } from '@mui/material';\nimport EditIcon from '@mui/icons-material/Edit';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { useHistory } from 'react-router-dom'; // Import useHistory hook for navigation\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// Helper function to calculate tax on profit\n\nconst UploadTransactions = () => {\n  _s();\n  const history = useHistory(); // Create history object\n\n  const handleBack = () => {\n    history.push('/'); // Navigate back to home page\n  };\n  const [transactions, setTransactions] = useState([]);\n  const [totalTaxDue, setTotalTaxDue] = useState('0.00'); // State for total tax due\n  const [isEditing, setIsEditing] = useState(false);\n  const [editedTransaction, setEditedTransaction] = useState(null);\n  const [taxReport, setTaxReport] = useState([]);\n  const handleClick = () => {\n    console.log('Button clicked!');\n  };\n  const [isAdding, setIsAdding] = useState(false);\n  const [fixingMarket, setFixingMarket] = useState(null);\n  const [newTransaction, setNewTransaction] = useState({\n    Date: new Date().toISOString().split('T')[0],\n    Market: '',\n    Type: 'BUY',\n    Amount: 0,\n    Price: 0,\n    Fee: 0\n  });\n  const handleFixMarket = market => {\n    setFixingMarket(market);\n    setNewTransaction({\n      Date: new Date().toISOString().split('T')[0],\n      // Default current date\n      Market: market,\n      Type: 'BUY',\n      Price: 0,\n      Amount: 0,\n      Fee: 0\n    });\n  };\n  const handleNewTransactionChange = (field, value) => {\n    setNewTransaction(prev => ({\n      ...prev,\n      [field]: value\n    }));\n  };\n\n  // Add the new transaction to the transactions list\n  const handleAddTransactionNew = () => {\n    // Validate inputs\n    if (!newTransaction.Market || !newTransaction.Type) {\n      alert('Please fill in all required fields.');\n      return;\n    }\n    setIsAdding(false);\n    setTransactions(prev => [...prev, {\n      ...newTransaction\n    }]);\n    // Reset the form\n    setNewTransaction({\n      Date: new Date().toISOString().split('T')[0],\n      Market: '',\n      Type: 'BUY',\n      Amount: 0,\n      Price: 0,\n      Fee: 0\n    });\n  };\n  const handleAddTransaction = () => {\n    const newTransaction = {\n      Date: '',\n      Market: '',\n      Type: '',\n      Price: 0,\n      Amount: 0,\n      Total: 0,\n      Fee: 0\n    };\n    setTransactions([...transactions, newTransaction]);\n    setIsEditing(true);\n    setEditedTransaction(newTransaction);\n  };\n  const handleIsAdding = () => {\n    setIsAdding(true);\n  };\n  // Define the structure of the transaction object\n\n  const generateTaxReport = () => {\n    const report = [];\n    let totalTax = 0;\n    // Group transactions by market\n    const groupedByMarket = transactions.reduce((acc, transaction) => {\n      const {\n        Market\n      } = transaction;\n      if (!acc[Market]) acc[Market] = [];\n      acc[Market].push(transaction);\n      return acc;\n    }, {});\n    Object.keys(groupedByMarket).forEach(market => {\n      const marketTransactions = groupedByMarket[market];\n\n      // Sort transactions by date\n      marketTransactions.sort((a, b) => new Date(a.Date).getTime() - new Date(b.Date).getTime()); // Sort by date\n\n      let buyQuantity = 0;\n      let sellQuantity = 0;\n      let profit = 0;\n      let note = '';\n      let sellDetected = false;\n      let remainingAmount = 0;\n      let buyTracker = 0;\n      marketTransactions.forEach(transaction => {\n        // Explicitly define type for 'transaction'\n        const {\n          Type,\n          Amount,\n          Price,\n          Fee\n        } = transaction;\n        const amount = +Amount || 0;\n        const price = +Price || 0;\n        const fee = +Fee || 0;\n        if (Type === 'BUY') {\n          buyQuantity += amount; // Accumulate BUY quantity\n          buyTracker += amount;\n        } else if (Type === 'SELL') {\n          sellDetected = true;\n          sellQuantity += amount;\n          if (buyQuantity >= amount) {\n            // Full SELL matched with available BUY\n            profit += (price - fee) * amount;\n            buyQuantity -= amount; // Deduct sold quantity from available BUY\n          } else {\n            // Partial SELL exceeds available BUY\n            profit += (price - fee) * buyQuantity;\n            note = 'Buy is less than sell';\n            buyQuantity = 0;\n          }\n        }\n      });\n      remainingAmount = buyTracker - sellQuantity;\n      if (buyTracker == 0) {\n        remainingAmount = 0;\n      } else {\n        note = '';\n      }\n      if (sellDetected && buyQuantity === 0 && !note) {\n        note = 'Sell order not detected';\n      }\n      // Remaining quantity after selling all available BUY orders if any. If no sell, it remains 0.\n\n      const tax = profit * 0.3; // 30% tax rate\n      totalTax += tax;\n      report.push({\n        index: report.length + 1,\n        market: market,\n        profit: profit.toFixed(2),\n        tax: sellDetected ? tax.toFixed(2) : '0.00',\n        remainingQuantity: remainingAmount,\n        note\n      });\n    });\n    return {\n      report,\n      totalTax\n    };\n  };\n  const handleCalculateTax = () => {\n    const {\n      report,\n      totalTax\n    } = generateTaxReport(); // Destructure to get report and totalTax\n    setTaxReport(report);\n    setTotalTaxDue(totalTax.toFixed(2)); // Set the total tax due\n  };\n  const calculateTax = (purchasePrice, sellPrice, amount) => {\n    if (isNaN(purchasePrice) || isNaN(sellPrice) || isNaN(amount)) {\n      console.log('Invalid purchase price');\n      console.error(\"Invalid data for tax calculation\", {\n        purchasePrice,\n        sellPrice,\n        amount\n      });\n      return NaN;\n    }\n    console.log('Valid purchase price');\n    const profit = (sellPrice - purchasePrice) * amount;\n    const tax = profit * 0.30; // 30% tax rate on profit\n    return tax;\n  };\n  const handleFileUpload = event => {\n    var _event$target$files;\n    const file = (_event$target$files = event.target.files) === null || _event$target$files === void 0 ? void 0 : _event$target$files[0];\n    if (!file) return console.error(\"No file selected\");\n    const reader = new FileReader();\n    reader.onload = e => {\n      var _e$target;\n      const binaryStr = (_e$target = e.target) === null || _e$target === void 0 ? void 0 : _e$target.result;\n      if (typeof binaryStr === 'string') {\n        const workbook = XLSX.read(binaryStr, {\n          type: 'binary'\n        });\n        const firstSheetName = workbook.SheetNames[0];\n        const worksheet = workbook.Sheets[firstSheetName];\n        const jsonData = XLSX.utils.sheet_to_json(worksheet, {\n          header: 1\n        });\n        const transactions = processExcelData(jsonData);\n        setTransactions(transactions);\n      }\n    };\n    reader.readAsBinaryString(file);\n  };\n  const processExcelData = jsonData => {\n    const [headers, ...rows] = jsonData;\n    const formattedHeaders = headers.map(header => header.trim().charAt(0).toUpperCase() + header.trim().slice(1));\n    return rows.map(row => {\n      const transaction = {};\n      formattedHeaders.forEach((header, index) => {\n        const value = row[index] || '';\n        transaction[header] = ['Price', 'Total', 'Amount'].includes(header) ? +value : value; // Convert numeric fields\n      });\n      return transaction;\n    });\n  };\n  const handleEdit = transaction => {\n    setIsEditing(true);\n    setEditedTransaction({\n      ...transaction\n    });\n  };\n  const handleSaveEdit = () => {\n    if (editedTransaction) {\n      const updatedTransactions = [...transactions];\n      const index = updatedTransactions.findIndex(t => t.Date === editedTransaction.Date && t.Market === editedTransaction.Market);\n      if (index !== -1) {\n        updatedTransactions[index] = editedTransaction;\n      } else {\n        updatedTransactions.push(editedTransaction); // Add as new transaction\n      }\n      setTransactions(updatedTransactions);\n      setIsEditing(false);\n      setEditedTransaction(null);\n    }\n  };\n  const handleSaveNewTransaction = () => {\n    if (newTransaction.Market && newTransaction.Amount > 0 && newTransaction.Price >= 0) {\n      const updatedTransactions = [...transactions, {\n        ...newTransaction,\n        Total: newTransaction.Price * newTransaction.Amount\n      }];\n      setTransactions(updatedTransactions);\n      setFixingMarket(null); // Close the modal\n    } else {\n      alert(\"Please fill all fields correctly before saving the transaction.\");\n    }\n    setIsAdding(false);\n  };\n  const handleChange = (e, field) => {\n    const target = e.target; // Explicitly cast to HTMLInputElement\n    const {\n      value\n    } = target;\n    setEditedTransaction(prev => ({\n      ...prev,\n      [field]: field === 'Amount' || field === 'Total' ? +value : value // Convert to number for Quantity and Total\n    }));\n  };\n  const handleDelete = transaction => {\n    const updatedTransactions = transactions.filter(t => t.Date !== transaction.Date || t.Market !== transaction.Market);\n    setTransactions(updatedTransactions);\n  };\n\n  // const handleCalculateTax = () => {\n  //   return transactions.map((transaction, index) => {\n  //     const price = +transaction.Price || 0; // Ensure numeric\n  //     const total = +transaction.Total || 0; // Ensure numeric\n  //     const amount = +transaction.Amount || 0; // Ensure numeric\n\n  //     const profit = (total - price) * amount;\n  //     const tax = profit * 0.3; // 30% tax rate\n\n  //     return {\n  //       index: index + 1,\n  //       profit: isNaN(profit) ? 0 : profit.toFixed(2),\n  //       tax: isNaN(tax) ? 0 : tax.toFixed(2),\n  //     };\n  //   });\n  // };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      padding: 3\n    },\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: handleBack,\n      sx: {\n        marginBottom: 2\n      },\n      children: \"Back to Home\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      align: \"center\",\n      children: \"Upload Transactions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        textAlign: 'center',\n        marginBottom: 3\n      },\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        component: \"label\",\n        color: \"primary\",\n        sx: {\n          padding: '10px 20px',\n          fontSize: '16px'\n        },\n        children: [\"Choose File\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \".xlsx, .xls\",\n          hidden: true,\n          onChange: handleFileUpload\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 7\n    }, this), transactions.length > 0 && /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        marginTop: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        gutterBottom: true,\n        align: \"center\",\n        children: \"Uploaded Transactions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n        component: Paper,\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          sx: {\n            minWidth: 650\n          },\n          \"aria-label\": \"transaction table\",\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [Object.keys(transactions[0]).map(key => /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"center\",\n                children: key\n              }, key, false, {\n                fileName: _jsxFileName,\n                lineNumber: 368,\n                columnNumber: 21\n              }, this)), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"center\",\n                children: \"Actions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 370,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 366,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 365,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: [transactions.map((transaction, idx) => /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [Object.entries(transaction).map(([key, value], index) => {\n                let displayValue = String(value);\n                if (key === 'Type') {\n                  displayValue = value === 'Sell' ? /*#__PURE__*/_jsxDEV(\"span\", {\n                    style: {\n                      color: 'red',\n                      fontWeight: 'bold'\n                    },\n                    children: \"SELL\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 380,\n                    columnNumber: 13\n                  }, this) : value === 'Buy' ? /*#__PURE__*/_jsxDEV(\"span\", {\n                    style: {\n                      color: 'green',\n                      fontWeight: 'bold'\n                    },\n                    children: \"BUY\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 382,\n                    columnNumber: 13\n                  }, this) : String(value);\n                }\n                return /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: displayValue\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 388,\n                  columnNumber: 11\n                }, this);\n              }), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"center\",\n                children: [/*#__PURE__*/_jsxDEV(IconButton, {\n                  onClick: () => handleEdit(transaction),\n                  children: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 395,\n                    columnNumber: 11\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 394,\n                  columnNumber: 9\n                }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                  onClick: () => handleDelete(transaction),\n                  children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 398,\n                    columnNumber: 11\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 397,\n                  columnNumber: 9\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 393,\n                columnNumber: 7\n              }, this)]\n            }, idx, true, {\n              fileName: _jsxFileName,\n              lineNumber: 375,\n              columnNumber: 5\n            }, this)), /*#__PURE__*/_jsxDEV(TableRow, {\n              children: /*#__PURE__*/_jsxDEV(TableCell, {\n                colSpan: Object.keys(transactions[0]).length + 1,\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"contained\",\n                  color: \"primary\",\n                  onClick: handleIsAdding,\n                  fullWidth: true,\n                  children: \"Add New Transaction\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 407,\n                  columnNumber: 7\n                }, this), isAdding && /*#__PURE__*/_jsxDEV(Grid, {\n                  container: true,\n                  spacing: 2,\n                  sx: {\n                    padding: 2\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 6,\n                    sm: 4,\n                    children: /*#__PURE__*/_jsxDEV(TextField, {\n                      label: \"Date\",\n                      type: \"date\",\n                      value: newTransaction.Date,\n                      onChange: e => handleNewTransactionChange('Date', e.target.value),\n                      fullWidth: true,\n                      InputLabelProps: {\n                        shrink: true\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 416,\n                      columnNumber: 11\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 415,\n                    columnNumber: 9\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 6,\n                    sm: 4,\n                    children: /*#__PURE__*/_jsxDEV(TextField, {\n                      label: \"Market\",\n                      value: newTransaction.Market,\n                      onChange: e => handleNewTransactionChange('Market', e.target.value),\n                      fullWidth: true\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 426,\n                      columnNumber: 11\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 425,\n                    columnNumber: 9\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 6,\n                    sm: 4,\n                    children: /*#__PURE__*/_jsxDEV(TextField, {\n                      label: \"Type\",\n                      select: true,\n                      value: newTransaction.Type,\n                      onChange: e => handleNewTransactionChange('Type', e.target.value),\n                      fullWidth: true,\n                      SelectProps: {\n                        native: true\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"BUY\",\n                        children: \"BUY\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 442,\n                        columnNumber: 13\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"SELL\",\n                        children: \"SELL\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 443,\n                        columnNumber: 13\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 434,\n                      columnNumber: 11\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 433,\n                    columnNumber: 9\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 6,\n                    sm: 4,\n                    children: /*#__PURE__*/_jsxDEV(TextField, {\n                      label: \"Amount\",\n                      type: \"number\",\n                      value: newTransaction.Amount,\n                      onChange: e => handleNewTransactionChange('Amount', e.target.value),\n                      fullWidth: true\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 447,\n                      columnNumber: 11\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 446,\n                    columnNumber: 9\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 6,\n                    sm: 4,\n                    children: /*#__PURE__*/_jsxDEV(TextField, {\n                      label: \"Price\",\n                      type: \"number\",\n                      value: newTransaction.Price,\n                      onChange: e => handleNewTransactionChange('Price', e.target.value),\n                      fullWidth: true\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 456,\n                      columnNumber: 11\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 455,\n                    columnNumber: 9\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 6,\n                    sm: 4,\n                    children: /*#__PURE__*/_jsxDEV(TextField, {\n                      label: \"Fee\",\n                      type: \"number\",\n                      value: newTransaction.Fee,\n                      onChange: e => handleNewTransactionChange('Fee', e.target.value),\n                      fullWidth: true\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 465,\n                      columnNumber: 11\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 464,\n                    columnNumber: 9\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 12,\n                    children: /*#__PURE__*/_jsxDEV(Button, {\n                      variant: \"contained\",\n                      color: \"primary\",\n                      onClick: handleAddTransactionNew,\n                      fullWidth: true,\n                      children: \"Save New Transaction\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 474,\n                      columnNumber: 11\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 473,\n                    columnNumber: 9\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 414,\n                  columnNumber: 9\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 406,\n                columnNumber: 5\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 405,\n              columnNumber: 3\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 373,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 11\n      }, this), isEditing && editedTransaction && /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          marginTop: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          gutterBottom: true,\n          children: \"Edit Transaction\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 493,\n          columnNumber: 14\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 6,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Amount\",\n              type: \"number\",\n              value: editedTransaction.Amount,\n              onChange: e => handleChange(e, 'Amount'),\n              fullWidth: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 498,\n              columnNumber: 7\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 497,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 6,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Price\",\n              type: \"number\",\n              value: editedTransaction.Price,\n              onChange: e => handleChange(e, 'Price'),\n              fullWidth: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 507,\n              columnNumber: 7\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 506,\n            columnNumber: 5\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 496,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: handleSaveEdit,\n          sx: {\n            marginTop: 2\n          },\n          children: \"Save Changes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 516,\n          columnNumber: 3\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 492,\n        columnNumber: 13\n      }, this), fixingMarket && /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          marginTop: 4\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          gutterBottom: true,\n          children: [\"Fix Transaction for Market: \", fixingMarket]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 524,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 6,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Type\",\n              select: true,\n              SelectProps: {\n                native: true\n              },\n              value: newTransaction.Type,\n              onChange: e => setNewTransaction({\n                ...newTransaction,\n                Type: e.target.value\n              }),\n              fullWidth: true,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"BUY\",\n                children: \"BUY\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 537,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"SELL\",\n                children: \"SELL\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 538,\n                columnNumber: 11\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 529,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 528,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 6,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Amount\",\n              type: \"number\",\n              value: newTransaction.Amount,\n              onChange: e => setNewTransaction({\n                ...newTransaction,\n                Amount: +e.target.value\n              }),\n              fullWidth: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 542,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 541,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 6,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Price\",\n              type: \"number\",\n              value: newTransaction.Price,\n              onChange: e => setNewTransaction({\n                ...newTransaction,\n                Price: +e.target.value\n              }),\n              fullWidth: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 551,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 550,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 6,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Fee\",\n              type: \"number\",\n              value: newTransaction.Fee,\n              onChange: e => setNewTransaction({\n                ...newTransaction,\n                Fee: +e.target.value\n              }),\n              fullWidth: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 560,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 559,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 527,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: () => handleSaveNewTransaction(),\n          sx: {\n            marginTop: 2\n          },\n          children: \"Save Transaction\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 569,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"text\",\n          color: \"secondary\",\n          onClick: () => setFixingMarket(null),\n          sx: {\n            marginLeft: 2\n          },\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 577,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 523,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          textAlign: 'center',\n          marginTop: 3\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"secondary\",\n          onClick: handleCalculateTax,\n          children: \"Calculate Tax\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 590,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 589,\n        columnNumber: 11\n      }, this), taxReport.length > 0 && /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          marginTop: 4\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          gutterBottom: true,\n          children: \"Tax Report\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 597,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n          component: Paper,\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            children: [/*#__PURE__*/_jsxDEV(TableHead, {\n              children: /*#__PURE__*/_jsxDEV(TableRow, {\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: \"Transaction\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 604,\n                  columnNumber: 13\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: \"Market\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 605,\n                  columnNumber: 5\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: \"Profit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 606,\n                  columnNumber: 5\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: \"Tax\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 607,\n                  columnNumber: 5\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: \"Remaining Quantity\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 608,\n                  columnNumber: 5\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: \"Note\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 609,\n                  columnNumber: 5\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 603,\n                columnNumber: 13\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 602,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n              children: taxReport.map(({\n                index,\n                market,\n                profit,\n                tax,\n                remainingQuantity,\n                note\n              }) => /*#__PURE__*/_jsxDEV(TableRow, {\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: index\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 616,\n                  columnNumber: 5\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: market\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 617,\n                  columnNumber: 5\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: profit\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 618,\n                  columnNumber: 5\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: tax\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 619,\n                  columnNumber: 5\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: remainingQuantity\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 620,\n                  columnNumber: 5\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: [note, note && /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"contained\",\n                    color: \"secondary\",\n                    size: \"small\",\n                    onClick: () => handleFixMarket(market),\n                    sx: {\n                      marginLeft: 1\n                    },\n                    children: \"Fix\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 624,\n                    columnNumber: 9\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 621,\n                  columnNumber: 5\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 615,\n                columnNumber: 3\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 613,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 601,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 600,\n          columnNumber: 9\n        }, this), taxReport.length > 0 && /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            marginTop: 3,\n            textAlign: 'center'\n          },\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            children: [\"Total Tax Due: \", totalTaxDue]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 644,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 643,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 596,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 331,\n    columnNumber: 5\n  }, this);\n};\n_s(UploadTransactions, \"qLauxPWae3wJOO+xh+ZWQHlLaeY=\", false, function () {\n  return [useHistory];\n});\n_c = UploadTransactions;\nexport default UploadTransactions;\nvar _c;\n$RefreshReg$(_c, \"UploadTransactions\");","map":{"version":3,"names":["React","useState","XLSX","Button","Typography","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","Box","IconButton","TextField","Grid","EditIcon","DeleteIcon","useHistory","jsxDEV","_jsxDEV","UploadTransactions","_s","history","handleBack","push","transactions","setTransactions","totalTaxDue","setTotalTaxDue","isEditing","setIsEditing","editedTransaction","setEditedTransaction","taxReport","setTaxReport","handleClick","console","log","isAdding","setIsAdding","fixingMarket","setFixingMarket","newTransaction","setNewTransaction","Date","toISOString","split","Market","Type","Amount","Price","Fee","handleFixMarket","market","handleNewTransactionChange","field","value","prev","handleAddTransactionNew","alert","handleAddTransaction","Total","handleIsAdding","generateTaxReport","report","totalTax","groupedByMarket","reduce","acc","transaction","Object","keys","forEach","marketTransactions","sort","a","b","getTime","buyQuantity","sellQuantity","profit","note","sellDetected","remainingAmount","buyTracker","amount","price","fee","tax","index","length","toFixed","remainingQuantity","handleCalculateTax","calculateTax","purchasePrice","sellPrice","isNaN","error","NaN","handleFileUpload","event","_event$target$files","file","target","files","reader","FileReader","onload","e","_e$target","binaryStr","result","workbook","read","type","firstSheetName","SheetNames","worksheet","Sheets","jsonData","utils","sheet_to_json","header","processExcelData","readAsBinaryString","headers","rows","formattedHeaders","map","trim","charAt","toUpperCase","slice","row","includes","handleEdit","handleSaveEdit","updatedTransactions","findIndex","t","handleSaveNewTransaction","handleChange","handleDelete","filter","sx","padding","children","variant","color","onClick","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","gutterBottom","align","textAlign","component","fontSize","accept","hidden","onChange","marginTop","minWidth","key","idx","entries","displayValue","String","style","fontWeight","colSpan","fullWidth","container","spacing","item","xs","sm","label","InputLabelProps","shrink","select","SelectProps","native","marginLeft","size","_c","$RefreshReg$"],"sources":["/Users/neel/Documents/Tax calculator/taxcalc/crypto-tax-calculator/src/components/UploadTransactions.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport * as XLSX from 'xlsx';\nimport { \n  Button, Typography, Table, TableBody, TableCell, TableContainer, \n  TableHead, TableRow, Paper, Box, IconButton, TextField, Grid \n} from '@mui/material';\nimport EditIcon from '@mui/icons-material/Edit';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { useHistory } from 'react-router-dom'; // Import useHistory hook for navigation\n\ntype EditedTransactionType = {\n  Amount: number;\n  Total: number;\n  [key: string]: string | number;\n};\n\n// Helper function to calculate tax on profit\n\n\n\n\nconst UploadTransactions = () => {\n  const history = useHistory(); // Create history object\n\n  const handleBack = () => {\n    history.push('/'); // Navigate back to home page\n  };\n\n  const [transactions, setTransactions] = useState<any[]>([]);\n  const [totalTaxDue, setTotalTaxDue] = useState<string>('0.00'); // State for total tax due\n  const [isEditing, setIsEditing] = useState<boolean>(false);\n  const [editedTransaction, setEditedTransaction] = useState<EditedTransactionType | null>(null); \n  const [taxReport, setTaxReport] = useState<{ index: number; market: string; profit: string; tax: string;  remainingQuantity: number; note: string }[]>([]);\n  const handleClick = () => {\n    console.log('Button clicked!');\n  };\n\n  const [isAdding, setIsAdding] = useState<boolean>(false);\n\n  const [fixingMarket, setFixingMarket] = useState<string | null>(null);\n  type TransactionType = {\n    Date: string;\n    Market: string;\n    Type: string;\n    Amount: number;\n    Price: number;\n    Fee: number;\n  };\n  \n  const [newTransaction, setNewTransaction] = useState<TransactionType>({\n    Date: new Date().toISOString().split('T')[0],\n    Market: '',\n    Type: 'BUY',\n    Amount: 0,\n    Price: 0,\n    Fee: 0,\n  });\n\nconst handleFixMarket = (market: string) => {\n  setFixingMarket(market);\n  setNewTransaction({\n    Date: new Date().toISOString().split('T')[0], // Default current date\n    Market: market,\n    Type: 'BUY',\n    Price: 0,\n    Amount: 0,\n    Fee: 0,\n  });\n};\n\nconst handleNewTransactionChange = (field: string, value: string) => {\n  setNewTransaction((prev) => ({\n    ...prev,\n    [field]: value,\n  }));\n};\n\n// Add the new transaction to the transactions list\nconst handleAddTransactionNew = () => {\n  // Validate inputs\n  if (!newTransaction.Market || !newTransaction.Type) {\n    alert('Please fill in all required fields.');\n    return;\n  }\n  setIsAdding(false);\n\n  setTransactions((prev) => [...prev, { ...newTransaction }]);\n  // Reset the form\n  setNewTransaction({\n    Date: new Date().toISOString().split('T')[0],\n    Market: '',\n    Type: 'BUY',\n    Amount: 0,\n    Price: 0,\n    Fee: 0,\n  });\n};\n\n  const handleAddTransaction = () => {\n    const newTransaction = {\n      Date: '', \n      Market: '',\n      Type: '',\n      Price: 0,\n      Amount: 0,\n      Total: 0,\n      Fee: 0,\n    };\n    setTransactions([...transactions, newTransaction]);\n    setIsEditing(true);\n    setEditedTransaction(newTransaction);\n  };\n\n  const handleIsAdding = () => {\n    setIsAdding(true);\n  }\n// Define the structure of the transaction object\ninterface Transaction {\n  Market: string;\n  Date: string;\n  Type: string; // \"BUY\" or \"SELL\"\n  Amount: string; // Quantity of the asset\n  Price: string; // Price at which the transaction occurred\n  Fee: string; // Transaction fee\n}\n\nconst generateTaxReport = () => {\n  const report: { index: number; market: string; profit: string; tax: string; remainingQuantity: number; note: string }[] = [];\n  let totalTax = 0;\n  // Group transactions by market\n  const groupedByMarket = transactions.reduce((acc, transaction) => {\n    const { Market } = transaction;\n    if (!acc[Market]) acc[Market] = [];\n    acc[Market].push(transaction);\n    return acc;\n  }, {} as Record<string, Transaction[]>);\n\n  Object.keys(groupedByMarket).forEach((market) => {\n    const marketTransactions = groupedByMarket[market];\n\n    // Sort transactions by date\n    marketTransactions.sort((a: Transaction, b: Transaction) => new Date(a.Date).getTime() - new Date(b.Date).getTime()); // Sort by date\n\n    let buyQuantity = 0;\n    let sellQuantity = 0;\n    let profit = 0;\n    let note = '';\n    let sellDetected = false;\n    let remainingAmount = 0;\n    let buyTracker = 0;\n\n    marketTransactions.forEach((transaction: Transaction) => { // Explicitly define type for 'transaction'\n      const { Type, Amount, Price, Fee } = transaction;\n      const amount = +Amount || 0;\n      const price = +Price || 0;\n      const fee = +Fee || 0;\n      if (Type === 'BUY') {\n        buyQuantity += amount; // Accumulate BUY quantity\n        buyTracker += amount;\n      } else if (Type === 'SELL') {\n        sellDetected = true;\n        sellQuantity += amount;\n\n        if (buyQuantity >= amount) {\n          // Full SELL matched with available BUY\n          profit += (price - fee) * amount;\n          buyQuantity -= amount; // Deduct sold quantity from available BUY\n        } else {\n          // Partial SELL exceeds available BUY\n          profit += (price - fee) * buyQuantity;\n          note = 'Buy is less than sell';\n          buyQuantity = 0;\n        }\n      }\n    });\n    remainingAmount = buyTracker - sellQuantity; \n    if(buyTracker == 0)\n    {\n      remainingAmount = 0;\n    } else {\n      note = '';\n    }\n    if (sellDetected && buyQuantity === 0 && !note) {\n      note = 'Sell order not detected';\n    }\n   // Remaining quantity after selling all available BUY orders if any. If no sell, it remains 0.\n\n    const tax = profit * 0.3; // 30% tax rate\n    totalTax += tax;\n    report.push({\n      index: report.length + 1,\n      market: market,\n      profit: profit.toFixed(2),\n      tax: sellDetected ? tax.toFixed(2) : '0.00',\n      remainingQuantity: remainingAmount,\n      note,\n    });\n  });\n\n  return { report, totalTax};\n};\n\n  \nconst handleCalculateTax = () => {\n  const { report, totalTax } = generateTaxReport(); // Destructure to get report and totalTax\n  setTaxReport(report);\n  setTotalTaxDue(totalTax.toFixed(2)); // Set the total tax due\n};\n  const calculateTax = (purchasePrice: number, sellPrice: number, amount: number) => {\n    if (isNaN(purchasePrice) || isNaN(sellPrice) || isNaN(amount)) {\n      console.log('Invalid purchase price');\n      console.error(\"Invalid data for tax calculation\", { purchasePrice, sellPrice, amount });\n      return NaN;\n    }\n    console.log('Valid purchase price');\n  \n    const profit = (sellPrice - purchasePrice) * amount;\n    const tax = profit * 0.30; // 30% tax rate on profit\n    return tax;\n  };\n\n  const handleFileUpload = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const file = event.target.files?.[0];\n    if (!file) return console.error(\"No file selected\");\n\n    const reader = new FileReader();\n    reader.onload = (e) => {\n      const binaryStr = e.target?.result;\n      if (typeof binaryStr === 'string') {\n        const workbook = XLSX.read(binaryStr, { type: 'binary' });\n        const firstSheetName = workbook.SheetNames[0];\n        const worksheet = workbook.Sheets[firstSheetName];\n        const jsonData = XLSX.utils.sheet_to_json(worksheet, { header: 1 }) as any[][];\n\n        const transactions = processExcelData(jsonData);\n        setTransactions(transactions);\n      }\n    };\n    reader.readAsBinaryString(file);\n  };\n\n  const processExcelData = (jsonData: any[][]): any[] => {\n    const [headers, ...rows] = jsonData;\n    const formattedHeaders = headers.map((header: any) => header.trim().charAt(0).toUpperCase() + header.trim().slice(1));\n    return rows.map((row) => {\n      const transaction: Record<string, any> = {};\n      formattedHeaders.forEach((header, index) => {\n        const value = row[index] || '';\n        transaction[header] = ['Price', 'Total', 'Amount'].includes(header) ? +value : value; // Convert numeric fields\n      });\n      return transaction;\n    });\n  };\n\n  const handleEdit = (transaction: any) => {\n    setIsEditing(true);\n    setEditedTransaction({ ...transaction });\n  };\n\n  const handleSaveEdit = () => {\n    if (editedTransaction) {\n      const updatedTransactions = [...transactions];\n      const index = updatedTransactions.findIndex(\n        (t) => t.Date === editedTransaction.Date && t.Market === editedTransaction.Market\n      );\n      if (index !== -1) {\n        updatedTransactions[index] = editedTransaction;\n      } else {\n        updatedTransactions.push(editedTransaction); // Add as new transaction\n      }\n      setTransactions(updatedTransactions);\n      setIsEditing(false);\n      setEditedTransaction(null);\n    }\n  };\n\n  const handleSaveNewTransaction = () => {\n    if (newTransaction.Market && newTransaction.Amount > 0 && newTransaction.Price >= 0) {\n      const updatedTransactions = [\n        ...transactions,\n        { ...newTransaction, Total: newTransaction.Price * newTransaction.Amount },\n      ];\n      setTransactions(updatedTransactions);\n      setFixingMarket(null); // Close the modal\n    } else {\n      alert(\"Please fill all fields correctly before saving the transaction.\");\n    }\n    setIsAdding(false);\n  };\n  \n  \n\n  const handleChange = (\n    e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>,\n    field: string\n  ) => {\n    const target = e.target as HTMLInputElement; // Explicitly cast to HTMLInputElement\n    const { value } = target;\n  \n    setEditedTransaction((prev) => ({\n      ...prev!,\n      [field]: field === 'Amount' || field === 'Total' ? +value : value, // Convert to number for Quantity and Total\n    }));\n  };\n\n  const handleDelete = (transaction: any) => {\n    const updatedTransactions = transactions.filter(\n      (t) => t.Date !== transaction.Date || t.Market !== transaction.Market\n    );\n    setTransactions(updatedTransactions);\n  };\n\n  // const handleCalculateTax = () => {\n  //   return transactions.map((transaction, index) => {\n  //     const price = +transaction.Price || 0; // Ensure numeric\n  //     const total = +transaction.Total || 0; // Ensure numeric\n  //     const amount = +transaction.Amount || 0; // Ensure numeric\n  \n  //     const profit = (total - price) * amount;\n  //     const tax = profit * 0.3; // 30% tax rate\n  \n  //     return {\n  //       index: index + 1,\n  //       profit: isNaN(profit) ? 0 : profit.toFixed(2),\n  //       tax: isNaN(tax) ? 0 : tax.toFixed(2),\n  //     };\n  //   });\n  // };\n\n  return (\n    <Box sx={{ padding: 3 }}>\n         {/* Back Button */}\n         <Button variant=\"contained\" color=\"primary\" onClick={handleBack} sx={{ marginBottom: 2 }}>\n        Back to Home\n      </Button>\n      <Typography variant=\"h4\" gutterBottom align=\"center\">\n        Upload Transactions\n      </Typography>\n\n      <Box sx={{ textAlign: 'center', marginBottom: 3 }}>\n        <Button\n          variant=\"contained\"\n          component=\"label\"\n          color=\"primary\"\n          sx={{ padding: '10px 20px', fontSize: '16px' }}\n        >\n          Choose File\n          <input\n            type=\"file\"\n            accept=\".xlsx, .xls\"\n            hidden\n            onChange={handleFileUpload}\n          />\n        </Button>\n      </Box>\n\n      {transactions.length > 0 && (\n        <Box sx={{ marginTop: 4 }}>\n          <Typography variant=\"h5\" gutterBottom align=\"center\">\n            Uploaded Transactions\n          </Typography>\n\n          <TableContainer component={Paper}>\n            <Table sx={{ minWidth: 650 }} aria-label=\"transaction table\">\n              <TableHead>\n                <TableRow>\n                  {Object.keys(transactions[0]).map((key) => (\n                    <TableCell key={key} align=\"center\">{key}</TableCell>\n                  ))}\n                  <TableCell align=\"center\">Actions</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n              {transactions.map((transaction, idx) => (\n    <TableRow key={idx}>\n      {Object.entries(transaction).map(([key, value], index) => {\n        let displayValue: React.ReactNode = String(value);\n        if (key === 'Type') {\n          displayValue = value === 'Sell' ? (\n            <span style={{ color: 'red', fontWeight: 'bold' }}>SELL</span>\n          ) : value === 'Buy' ? (\n            <span style={{ color: 'green', fontWeight: 'bold' }}>BUY</span>\n          ) : (\n            String(value)\n          );\n        }\n        return (\n          <TableCell key={index} align=\"center\">\n            {displayValue}\n          </TableCell>\n        );\n      })}\n      <TableCell align=\"center\">\n        <IconButton onClick={() => handleEdit(transaction)}>\n          <EditIcon />\n        </IconButton>\n        <IconButton onClick={() => handleDelete(transaction)}>\n          <DeleteIcon />\n        </IconButton>\n      </TableCell>\n    </TableRow>\n  ))}\n\n  {/* Add New Transaction Row */}\n  <TableRow>\n    <TableCell colSpan={Object.keys(transactions[0]).length + 1}>\n      <Button variant=\"contained\"\n            color=\"primary\"\n            onClick={handleIsAdding}\n            fullWidth>\n        Add New Transaction\n      </Button>\n      {isAdding && (\n        <Grid container spacing={2} sx={{ padding: 2 }}>\n        <Grid item xs={6} sm={4}>\n          <TextField\n            label=\"Date\"\n            type=\"date\"\n            value={newTransaction.Date}\n            onChange={(e) => handleNewTransactionChange('Date', e.target.value)}\n            fullWidth\n            InputLabelProps={{ shrink: true }}\n          />\n        </Grid>\n        <Grid item xs={6} sm={4}>\n          <TextField\n            label=\"Market\"\n            value={newTransaction.Market}\n            onChange={(e) => handleNewTransactionChange('Market', e.target.value)}\n            fullWidth\n          />\n        </Grid>\n        <Grid item xs={6} sm={4}>\n          <TextField\n            label=\"Type\"\n            select\n            value={newTransaction.Type}\n            onChange={(e) => handleNewTransactionChange('Type', e.target.value)}\n            fullWidth\n            SelectProps={{ native: true }}\n          >\n            <option value=\"BUY\">BUY</option>\n            <option value=\"SELL\">SELL</option>\n          </TextField>\n        </Grid>\n        <Grid item xs={6} sm={4}>\n          <TextField\n            label=\"Amount\"\n            type=\"number\"\n            value={newTransaction.Amount}\n            onChange={(e) => handleNewTransactionChange('Amount', e.target.value)}\n            fullWidth\n          />\n        </Grid>\n        <Grid item xs={6} sm={4}>\n          <TextField\n            label=\"Price\"\n            type=\"number\"\n            value={newTransaction.Price}\n            onChange={(e) => handleNewTransactionChange('Price', e.target.value)}\n            fullWidth\n          />\n        </Grid>\n        <Grid item xs={6} sm={4}>\n          <TextField\n            label=\"Fee\"\n            type=\"number\"\n            value={newTransaction.Fee}\n            onChange={(e) => handleNewTransactionChange('Fee', e.target.value)}\n            fullWidth\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={handleAddTransactionNew}\n            fullWidth\n          >\n            Save New Transaction\n          </Button>\n        </Grid>\n      </Grid>\n       )}\n    </TableCell>\n  </TableRow>\n              </TableBody>\n            </Table>\n          </TableContainer>\n\n          {isEditing && editedTransaction && (\n            <Box sx={{ marginTop: 2 }}>\n             <Typography variant=\"h6\" gutterBottom>\n    Edit Transaction\n  </Typography>\n  <Grid container spacing={2}>\n    <Grid item xs={6}>\n      <TextField\n        label=\"Amount\"\n        type=\"number\"\n        value={editedTransaction.Amount}\n        onChange={(e) => handleChange(e, 'Amount')}\n        fullWidth\n      />\n    </Grid>\n    <Grid item xs={6}>\n      <TextField\n        label=\"Price\"\n        type=\"number\"\n        value={editedTransaction.Price}\n        onChange={(e) => handleChange(e, 'Price')}\n        fullWidth\n      />\n    </Grid>\n  </Grid>\n  <Button variant=\"contained\" color=\"primary\" onClick={handleSaveEdit} sx={{ marginTop: 2 }}>\n    Save Changes\n  </Button>\n            </Box>\n          )}\n\n{fixingMarket && (\n  <Box sx={{ marginTop: 4 }}>\n    <Typography variant=\"h6\" gutterBottom>\n      Fix Transaction for Market: {fixingMarket}\n    </Typography>\n    <Grid container spacing={2}>\n      <Grid item xs={6}>\n        <TextField\n          label=\"Type\"\n          select\n          SelectProps={{ native: true }}\n          value={newTransaction.Type}\n          onChange={(e) => setNewTransaction({ ...newTransaction, Type: e.target.value })}\n          fullWidth\n        >\n          <option value=\"BUY\">BUY</option>\n          <option value=\"SELL\">SELL</option>\n        </TextField>\n      </Grid>\n      <Grid item xs={6}>\n        <TextField\n          label=\"Amount\"\n          type=\"number\"\n          value={newTransaction.Amount}\n          onChange={(e) => setNewTransaction({ ...newTransaction, Amount: +e.target.value })}\n          fullWidth\n        />\n      </Grid>\n      <Grid item xs={6}>\n        <TextField\n          label=\"Price\"\n          type=\"number\"\n          value={newTransaction.Price}\n          onChange={(e) => setNewTransaction({ ...newTransaction, Price: +e.target.value })}\n          fullWidth\n        />\n      </Grid>\n      <Grid item xs={6}>\n        <TextField\n          label=\"Fee\"\n          type=\"number\"\n          value={newTransaction.Fee}\n          onChange={(e) => setNewTransaction({ ...newTransaction, Fee: +e.target.value })}\n          fullWidth\n        />\n      </Grid>\n    </Grid>\n    <Button\n      variant=\"contained\"\n      color=\"primary\"\n      onClick={() => handleSaveNewTransaction()}\n      sx={{ marginTop: 2 }}\n    >\n      Save Transaction\n    </Button>\n    <Button\n      variant=\"text\"\n      color=\"secondary\"\n      onClick={() => setFixingMarket(null)}\n      sx={{ marginLeft: 2 }}\n    >\n      Cancel\n    </Button>\n  </Box>\n)}\n\n\n          <Box sx={{ textAlign: 'center', marginTop: 3 }}>\n            <Button variant=\"contained\" color=\"secondary\" onClick={handleCalculateTax}>\n              Calculate Tax\n            </Button>\n          </Box>\n\n          {taxReport.length > 0 && (\n      <Box sx={{ marginTop: 4 }}>\n        <Typography variant=\"h6\" gutterBottom>\n          Tax Report\n        </Typography>\n        <TableContainer component={Paper}>\n          <Table>\n            <TableHead>\n            <TableRow>\n            <TableCell align=\"center\">Transaction</TableCell>\n    <TableCell align=\"center\">Market</TableCell>\n    <TableCell align=\"center\">Profit</TableCell>\n    <TableCell align=\"center\">Tax</TableCell>\n    <TableCell align=\"center\">Remaining Quantity</TableCell>\n    <TableCell align=\"center\">Note</TableCell>\n  </TableRow>\n            </TableHead>\n\n            <TableBody>\n            {taxReport.map(({ index, market, profit, tax, remainingQuantity, note }) => (\n  <TableRow key={index}>\n    <TableCell align=\"center\">{index}</TableCell>\n    <TableCell align=\"center\">{market}</TableCell>\n    <TableCell align=\"center\">{profit}</TableCell>\n    <TableCell align=\"center\">{tax}</TableCell>\n    <TableCell align=\"center\">{remainingQuantity}</TableCell>\n    <TableCell align=\"center\">\n      {note}\n      {note && (\n        <Button\n          variant=\"contained\"\n          color=\"secondary\"\n          size=\"small\"\n          onClick={() => handleFixMarket(market)}\n          sx={{ marginLeft: 1 }}\n        >\n          Fix\n        </Button>\n      )}\n    </TableCell>\n  </TableRow>\n))}\n\n</TableBody>\n          </Table>\n        </TableContainer>\n         {/* Add the total tax due */}\n  {taxReport.length > 0 && (\n    <Box sx={{ marginTop: 3, textAlign: 'center' }}>\n      <Typography variant=\"h6\">Total Tax Due: {totalTaxDue}</Typography>\n    </Box>\n  )}\n            </Box>\n    )}\n  </Box>\n      )}\n    </Box>\n  );\n};\n\nexport default UploadTransactions;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}