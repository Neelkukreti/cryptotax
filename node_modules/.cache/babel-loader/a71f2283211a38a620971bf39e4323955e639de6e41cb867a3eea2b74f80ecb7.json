{"ast":null,"code":"var _jsxFileName = \"/Users/neel/Documents/Tax calculator/taxcalc/crypto-tax-calculator/src/components/UploadTransactions.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport * as XLSX from 'xlsx';\nimport { Button, Typography, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, Box, IconButton, TextField, Grid } from '@mui/material';\nimport EditIcon from '@mui/icons-material/Edit';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// Helper function to calculate tax on profit\n\nconst UploadTransactions = () => {\n  _s();\n  const [transactions, setTransactions] = useState([]);\n  const [isEditing, setIsEditing] = useState(false);\n  const [editedTransaction, setEditedTransaction] = useState(null);\n  const [taxReport, setTaxReport] = useState([]);\n  const handleClick = () => {\n    console.log('Button clicked!');\n  };\n  const generateTaxReport = () => {\n    return transactions.map((transaction, index) => {\n      const price = +transaction.Price || 0; // Ensure numeric\n      const total = +transaction.Total || 0; // Ensure numeric\n      const quantity = +transaction.Quantity || 0; // Ensure numeric\n\n      const profit = (total - price) * quantity;\n      const tax = profit * 0.3; // 30% tax rate\n      console.log(profit);\n      return {\n        index: index + 1,\n        profit: isNaN(profit) ? \"0.00\" : profit.toFixed(2),\n        // Convert to string\n        tax: isNaN(tax) ? \"0.00\" : tax.toFixed(2) // Convert to string\n      };\n    });\n  };\n  const handleCalculateTax = () => {\n    const report = generateTaxReport();\n    setTaxReport(report);\n  };\n  const calculateTax = (purchasePrice, sellPrice, amount) => {\n    if (isNaN(purchasePrice) || isNaN(sellPrice) || isNaN(amount)) {\n      console.log('Invalid purchase price');\n      console.error(\"Invalid data for tax calculation\", {\n        purchasePrice,\n        sellPrice,\n        amount\n      });\n      return NaN;\n    }\n    console.log('Valid purchase price');\n    const profit = (sellPrice - purchasePrice) * amount;\n    const tax = profit * 0.30; // 30% tax rate on profit\n    return tax;\n  };\n  const handleFileUpload = event => {\n    var _event$target$files;\n    const file = (_event$target$files = event.target.files) === null || _event$target$files === void 0 ? void 0 : _event$target$files[0];\n    if (!file) return console.error(\"No file selected\");\n    const reader = new FileReader();\n    reader.onload = e => {\n      var _e$target;\n      const binaryStr = (_e$target = e.target) === null || _e$target === void 0 ? void 0 : _e$target.result;\n      if (typeof binaryStr === 'string') {\n        const workbook = XLSX.read(binaryStr, {\n          type: 'binary'\n        });\n        const firstSheetName = workbook.SheetNames[0];\n        const worksheet = workbook.Sheets[firstSheetName];\n        const jsonData = XLSX.utils.sheet_to_json(worksheet, {\n          header: 1\n        });\n        const transactions = processExcelData(jsonData);\n        console.log(jsonData);\n        setTransactions(transactions);\n      }\n    };\n    reader.readAsBinaryString(file);\n  };\n  const processExcelData = jsonData => {\n    const [headers, ...rows] = jsonData;\n    const formattedHeaders = headers.map(header => header.trim().charAt(0).toUpperCase() + header.trim().slice(1));\n    return rows.map(row => {\n      const transaction = {};\n      formattedHeaders.forEach((header, index) => {\n        const value = row[index] || '';\n        transaction[header] = ['Price', 'Total', 'Amount'].includes(header) ? +value : value; // Convert numeric fields\n      });\n      return transaction;\n    });\n  };\n  const handleEdit = transaction => {\n    setIsEditing(true);\n    setEditedTransaction({\n      ...transaction\n    });\n  };\n  const handleSaveEdit = () => {\n    if (editedTransaction) {\n      const updatedTransactions = [...transactions];\n      const index = updatedTransactions.findIndex(t => t.Date === editedTransaction.Date && t.Market === editedTransaction.Market);\n      if (index !== -1) {\n        updatedTransactions[index] = editedTransaction;\n        setTransactions(updatedTransactions);\n      }\n      setIsEditing(false);\n      setEditedTransaction(null);\n    }\n  };\n  const handleChange = (e, field) => {\n    const target = e.target; // Explicitly cast to HTMLInputElement\n    const {\n      value\n    } = target;\n    setEditedTransaction(prev => ({\n      ...prev,\n      [field]: field === 'Amount' || field === 'Total' ? +value : value // Convert to number for Quantity and Total\n    }));\n  };\n  const handleDelete = transaction => {\n    const updatedTransactions = transactions.filter(t => t.Date !== transaction.Date || t.Market !== transaction.Market);\n    setTransactions(updatedTransactions);\n  };\n\n  // const handleCalculateTax = () => {\n  //   return transactions.map((transaction, index) => {\n  //     const price = +transaction.Price || 0; // Ensure numeric\n  //     const total = +transaction.Total || 0; // Ensure numeric\n  //     const amount = +transaction.Amount || 0; // Ensure numeric\n\n  //     const profit = (total - price) * amount;\n  //     const tax = profit * 0.3; // 30% tax rate\n\n  //     return {\n  //       index: index + 1,\n  //       profit: isNaN(profit) ? 0 : profit.toFixed(2),\n  //       tax: isNaN(tax) ? 0 : tax.toFixed(2),\n  //     };\n  //   });\n  // };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      padding: 3\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      align: \"center\",\n      children: \"Upload Transactions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        textAlign: 'center',\n        marginBottom: 3\n      },\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        component: \"label\",\n        color: \"primary\",\n        sx: {\n          padding: '10px 20px',\n          fontSize: '16px'\n        },\n        children: [\"Choose File\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \".xlsx, .xls\",\n          hidden: true,\n          onChange: handleFileUpload\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this), transactions.length > 0 && /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        marginTop: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        gutterBottom: true,\n        align: \"center\",\n        children: \"Uploaded Transactions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n        component: Paper,\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          sx: {\n            minWidth: 650\n          },\n          \"aria-label\": \"transaction table\",\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [Object.keys(transactions[0]).map(key => /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"center\",\n                children: key\n              }, key, false, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 21\n              }, this)), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"center\",\n                children: \"Actions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: transactions.map((transaction, idx) => /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [Object.entries(transaction).map(([key, value], index) => {\n                let displayValue = String(value);\n                if (key === 'Type') {\n                  displayValue = value === 'Sell' ? /*#__PURE__*/_jsxDEV(\"span\", {\n                    style: {\n                      color: 'red',\n                      fontWeight: 'bold'\n                    },\n                    children: \"SELL\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 200,\n                    columnNumber: 27\n                  }, this) : value === 'Buy' ? /*#__PURE__*/_jsxDEV(\"span\", {\n                    style: {\n                      color: 'green',\n                      fontWeight: 'bold'\n                    },\n                    children: \"BUY\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 202,\n                    columnNumber: 27\n                  }, this) : String(value);\n                }\n                return /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: displayValue\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 208,\n                  columnNumber: 25\n                }, this);\n              }), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"center\",\n                children: [/*#__PURE__*/_jsxDEV(IconButton, {\n                  onClick: () => handleEdit(transaction),\n                  children: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 215,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 214,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                  onClick: () => handleDelete(transaction),\n                  children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 218,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 217,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 21\n              }, this)]\n            }, idx, true, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 11\n      }, this), isEditing && editedTransaction && /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          marginTop: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          gutterBottom: true,\n          children: \"Edit Transaction\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 6,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              type: \"number\",\n              value: editedTransaction.Amount,\n              onChange: e => handleChange(e, 'Amount'),\n              fullWidth: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 6,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              type: \"number\",\n              value: editedTransaction.Total,\n              onChange: e => handleChange(e, 'Total'),\n              fullWidth: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: handleSaveEdit,\n          sx: {\n            marginTop: 2\n          },\n          children: \"Save Changes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          textAlign: 'center',\n          marginTop: 3\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"secondary\",\n          onClick: handleCalculateTax,\n          children: \"Calculate Tax\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 11\n      }, this), taxReport.length > 0 && /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          marginTop: 4\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          gutterBottom: true,\n          children: \"Tax Report\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n          component: Paper,\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            children: [/*#__PURE__*/_jsxDEV(TableHead, {\n              children: /*#__PURE__*/_jsxDEV(TableRow, {\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: \"Transaction Index\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 271,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: \"Profit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 272,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: \"Tax\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 273,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 270,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n              children: taxReport.map(({\n                index,\n                profit,\n                tax\n              }) => /*#__PURE__*/_jsxDEV(TableRow, {\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: index\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 279,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: profit\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 280,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: tax\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 281,\n                  columnNumber: 19\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 278,\n                columnNumber: 17\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 155,\n    columnNumber: 5\n  }, this);\n};\n_s(UploadTransactions, \"HPOybgL7MXrNS7UiUgDhmw2Pvf4=\");\n_c = UploadTransactions;\nexport default UploadTransactions;\nvar _c;\n$RefreshReg$(_c, \"UploadTransactions\");","map":{"version":3,"names":["React","useState","XLSX","Button","Typography","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","Box","IconButton","TextField","Grid","EditIcon","DeleteIcon","jsxDEV","_jsxDEV","UploadTransactions","_s","transactions","setTransactions","isEditing","setIsEditing","editedTransaction","setEditedTransaction","taxReport","setTaxReport","handleClick","console","log","generateTaxReport","map","transaction","index","price","Price","total","Total","quantity","Quantity","profit","tax","isNaN","toFixed","handleCalculateTax","report","calculateTax","purchasePrice","sellPrice","amount","error","NaN","handleFileUpload","event","_event$target$files","file","target","files","reader","FileReader","onload","e","_e$target","binaryStr","result","workbook","read","type","firstSheetName","SheetNames","worksheet","Sheets","jsonData","utils","sheet_to_json","header","processExcelData","readAsBinaryString","headers","rows","formattedHeaders","trim","charAt","toUpperCase","slice","row","forEach","value","includes","handleEdit","handleSaveEdit","updatedTransactions","findIndex","t","Date","Market","handleChange","field","prev","handleDelete","filter","sx","padding","children","variant","gutterBottom","align","fileName","_jsxFileName","lineNumber","columnNumber","textAlign","marginBottom","component","color","fontSize","accept","hidden","onChange","length","marginTop","minWidth","Object","keys","key","idx","entries","displayValue","String","style","fontWeight","onClick","container","spacing","item","xs","Amount","fullWidth","_c","$RefreshReg$"],"sources":["/Users/neel/Documents/Tax calculator/taxcalc/crypto-tax-calculator/src/components/UploadTransactions.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport * as XLSX from 'xlsx';\nimport { \n  Button, Typography, Table, TableBody, TableCell, TableContainer, \n  TableHead, TableRow, Paper, Box, IconButton, TextField, Grid \n} from '@mui/material';\nimport EditIcon from '@mui/icons-material/Edit';\nimport DeleteIcon from '@mui/icons-material/Delete';\n\ntype EditedTransactionType = {\n  Amount: number;\n  Total: number;\n  [key: string]: string | number;\n};\n\n// Helper function to calculate tax on profit\n\n\n\n\nconst UploadTransactions = () => {\n  const [transactions, setTransactions] = useState<any[]>([]);\n  const [isEditing, setIsEditing] = useState<boolean>(false);\n  const [editedTransaction, setEditedTransaction] = useState<EditedTransactionType | null>(null);\n  const [taxReport, setTaxReport] = useState<{ index: number; profit: string; tax: string }[]>([]);\n  const handleClick = () => {\n    console.log('Button clicked!');\n  };\n  const generateTaxReport = () => {\n    return transactions.map((transaction, index) => {\n      const price = +transaction.Price || 0; // Ensure numeric\n      const total = +transaction.Total || 0; // Ensure numeric\n      const quantity = +transaction.Quantity || 0; // Ensure numeric\n  \n      const profit = (total - price) * quantity;\n      const tax = profit * 0.3; // 30% tax rate\n      console.log(profit);\n      return {\n        index: index + 1,\n        profit: isNaN(profit) ? \"0.00\" : profit.toFixed(2), // Convert to string\n        tax: isNaN(tax) ? \"0.00\" : tax.toFixed(2),         // Convert to string\n      };\n    });\n  };\n  \n  const handleCalculateTax = () => {\n    const report = generateTaxReport();\n    setTaxReport(report);\n  };\n  const calculateTax = (purchasePrice: number, sellPrice: number, amount: number) => {\n    if (isNaN(purchasePrice) || isNaN(sellPrice) || isNaN(amount)) {\n      console.log('Invalid purchase price');\n      console.error(\"Invalid data for tax calculation\", { purchasePrice, sellPrice, amount });\n      return NaN;\n    }\n    console.log('Valid purchase price');\n  \n    const profit = (sellPrice - purchasePrice) * amount;\n    const tax = profit * 0.30; // 30% tax rate on profit\n    return tax;\n  };\n\n  const handleFileUpload = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const file = event.target.files?.[0];\n    if (!file) return console.error(\"No file selected\");\n\n    const reader = new FileReader();\n    reader.onload = (e) => {\n      const binaryStr = e.target?.result;\n      if (typeof binaryStr === 'string') {\n        const workbook = XLSX.read(binaryStr, { type: 'binary' });\n        const firstSheetName = workbook.SheetNames[0];\n        const worksheet = workbook.Sheets[firstSheetName];\n        const jsonData = XLSX.utils.sheet_to_json(worksheet, { header: 1 }) as any[][];\n\n        const transactions = processExcelData(jsonData);\n        console.log(jsonData);\n        setTransactions(transactions);\n      }\n    };\n    reader.readAsBinaryString(file);\n  };\n\n  const processExcelData = (jsonData: any[][]): any[] => {\n    const [headers, ...rows] = jsonData;\n    const formattedHeaders = headers.map((header: any) => header.trim().charAt(0).toUpperCase() + header.trim().slice(1));\n    return rows.map((row) => {\n      const transaction: Record<string, any> = {};\n      formattedHeaders.forEach((header, index) => {\n        const value = row[index] || '';\n        transaction[header] = ['Price', 'Total', 'Amount'].includes(header) ? +value : value; // Convert numeric fields\n      });\n      return transaction;\n    });\n  };\n\n  const handleEdit = (transaction: any) => {\n    setIsEditing(true);\n    setEditedTransaction({ ...transaction });\n  };\n\n  const handleSaveEdit = () => {\n    if (editedTransaction) {\n      const updatedTransactions = [...transactions];\n      const index = updatedTransactions.findIndex(\n        (t) => t.Date === editedTransaction.Date && t.Market === editedTransaction.Market\n      );\n      if (index !== -1) {\n        updatedTransactions[index] = editedTransaction;\n        setTransactions(updatedTransactions);\n      }\n      setIsEditing(false);\n      setEditedTransaction(null);\n    }\n  };\n\n  const handleChange = (\n    e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>,\n    field: string\n  ) => {\n    const target = e.target as HTMLInputElement; // Explicitly cast to HTMLInputElement\n    const { value } = target;\n  \n    setEditedTransaction((prev) => ({\n      ...prev!,\n      [field]: field === 'Amount' || field === 'Total' ? +value : value, // Convert to number for Quantity and Total\n    }));\n  };\n\n  const handleDelete = (transaction: any) => {\n    const updatedTransactions = transactions.filter(\n      (t) => t.Date !== transaction.Date || t.Market !== transaction.Market\n    );\n    setTransactions(updatedTransactions);\n  };\n\n  // const handleCalculateTax = () => {\n  //   return transactions.map((transaction, index) => {\n  //     const price = +transaction.Price || 0; // Ensure numeric\n  //     const total = +transaction.Total || 0; // Ensure numeric\n  //     const amount = +transaction.Amount || 0; // Ensure numeric\n  \n  //     const profit = (total - price) * amount;\n  //     const tax = profit * 0.3; // 30% tax rate\n  \n  //     return {\n  //       index: index + 1,\n  //       profit: isNaN(profit) ? 0 : profit.toFixed(2),\n  //       tax: isNaN(tax) ? 0 : tax.toFixed(2),\n  //     };\n  //   });\n  // };\n\n  return (\n    <Box sx={{ padding: 3 }}>\n      <Typography variant=\"h4\" gutterBottom align=\"center\">\n        Upload Transactions\n      </Typography>\n\n      <Box sx={{ textAlign: 'center', marginBottom: 3 }}>\n        <Button\n          variant=\"contained\"\n          component=\"label\"\n          color=\"primary\"\n          sx={{ padding: '10px 20px', fontSize: '16px' }}\n        >\n          Choose File\n          <input\n            type=\"file\"\n            accept=\".xlsx, .xls\"\n            hidden\n            onChange={handleFileUpload}\n          />\n        </Button>\n      </Box>\n\n      {transactions.length > 0 && (\n        <Box sx={{ marginTop: 4 }}>\n          <Typography variant=\"h5\" gutterBottom align=\"center\">\n            Uploaded Transactions\n          </Typography>\n\n          <TableContainer component={Paper}>\n            <Table sx={{ minWidth: 650 }} aria-label=\"transaction table\">\n              <TableHead>\n                <TableRow>\n                  {Object.keys(transactions[0]).map((key) => (\n                    <TableCell key={key} align=\"center\">{key}</TableCell>\n                  ))}\n                  <TableCell align=\"center\">Actions</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {transactions.map((transaction, idx) => (\n                  <TableRow key={idx}>\n                    {Object.entries(transaction).map(([key, value], index) => {\n                      let displayValue: React.ReactNode = String(value);\n                      if (key === 'Type') {\n                        displayValue = value === 'Sell' ? (\n                          <span style={{ color: 'red', fontWeight: 'bold' }}>SELL</span>\n                        ) : value === 'Buy' ? (\n                          <span style={{ color: 'green', fontWeight: 'bold' }}>BUY</span>\n                        ) : (\n                          String(value)\n                        );\n                      }\n                      return (\n                        <TableCell key={index} align=\"center\">\n                          {displayValue}\n                        </TableCell>\n                      );\n                    })}\n                    <TableCell align=\"center\">\n                      <IconButton onClick={() => handleEdit(transaction)}>\n                        <EditIcon />\n                      </IconButton>\n                      <IconButton onClick={() => handleDelete(transaction)}>\n                        <DeleteIcon />\n                      </IconButton>\n                    </TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </TableContainer>\n\n          {isEditing && editedTransaction && (\n            <Box sx={{ marginTop: 2 }}>\n              <Typography variant=\"h6\" gutterBottom>\n                Edit Transaction\n              </Typography>\n              <Grid container spacing={2}>\n                <Grid item xs={6}>\n                  <TextField\n                    type=\"number\"\n                    value={editedTransaction.Amount}\n                    onChange={(e) => handleChange(e, 'Amount')}\n                    fullWidth\n                  />\n                </Grid>\n                <Grid item xs={6}>\n                  <TextField\n                    type=\"number\"\n                    value={editedTransaction.Total}\n                    onChange={(e) => handleChange(e, 'Total')}\n                    fullWidth\n                  />\n                </Grid>\n              </Grid>\n              <Button variant=\"contained\" color=\"primary\" onClick={handleSaveEdit} sx={{ marginTop: 2 }}>\n                Save Changes\n              </Button>\n            </Box>\n          )}\n\n          <Box sx={{ textAlign: 'center', marginTop: 3 }}>\n            <Button variant=\"contained\" color=\"secondary\" onClick={handleCalculateTax}>\n              Calculate Tax\n            </Button>\n          </Box>\n\n          {taxReport.length > 0 && (\n      <Box sx={{ marginTop: 4 }}>\n        <Typography variant=\"h6\" gutterBottom>\n          Tax Report\n        </Typography>\n        <TableContainer component={Paper}>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell align=\"center\">Transaction Index</TableCell>\n                <TableCell align=\"center\">Profit</TableCell>\n                <TableCell align=\"center\">Tax</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {taxReport.map(({ index, profit, tax }) => (\n                <TableRow key={index}>\n                  <TableCell align=\"center\">{index}</TableCell>\n                  <TableCell align=\"center\">{profit}</TableCell>\n                  <TableCell align=\"center\">{tax}</TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </Box>\n    )}\n  </Box>\n      )}\n    </Box>\n  );\n};\n\nexport default UploadTransactions;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}