{"ast":null,"code":"var _jsxFileName = \"/Users/neel/Documents/Tax calculator/taxcalc/crypto-tax-calculator/src/components/TransactionsTable.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, Button, Box, Typography, TextField } from \"@mui/material\";\nimport { styled } from \"@mui/system\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TypeCell = styled(TableCell)(({\n  type\n}) => ({\n  color: type === \"sell\" ? \"red\" : \"green\",\n  fontWeight: \"bold\",\n  textTransform: \"uppercase\"\n}));\n_c = TypeCell;\nconst TransactionsTable = ({\n  groupedTransactions,\n  onEditTransaction,\n  onDeleteTransaction\n}) => {\n  _s();\n  var _groupedTransactions$;\n  const [editingCoin, setEditingCoin] = useState(null);\n  const calculateAggregateData = () => {\n    return Object.entries(groupedTransactions).map(([coin, entries]) => {\n      const totalAmount = entries.reduce((sum, entry) => sum + entry.amount, 0);\n      const totalValue = entries.reduce((sum, entry) => sum + entry.total, 0);\n      return {\n        coin,\n        totalAmount,\n        totalValue\n      };\n    });\n  };\n  const aggregatedData = calculateAggregateData();\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [aggregatedData.length > 0 && /*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      sx: {\n        mb: 3\n      },\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Market\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Total Amount\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Total Value\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: aggregatedData.map(({\n            coin,\n            totalAmount,\n            totalValue\n          }, idx) => /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: coin\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: totalAmount\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: totalValue\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                size: \"small\",\n                color: \"secondary\",\n                onClick: () => setEditingCoin(editingCoin === coin ? null : coin),\n                children: editingCoin === coin ? \"Hide Transactions\" : \"View Transactions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 19\n            }, this)]\n          }, idx, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this), editingCoin && /*#__PURE__*/_jsxDEV(Box, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        gutterBottom: true,\n        children: [\"Transactions for \", editingCoin]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n        component: Paper,\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Price\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Amount\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Total\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Actions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: (_groupedTransactions$ = groupedTransactions[editingCoin]) === null || _groupedTransactions$ === void 0 ? void 0 : _groupedTransactions$.map((txn, idx) => /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: txn.date || \"Unknown\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(TypeCell, {\n                type: txn.type,\n                children: txn.type === \"sell\" ? \"SELL\" : \"BUY\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: txn.price\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  variant: \"outlined\",\n                  size: \"small\",\n                  type: \"number\",\n                  value: txn.amount,\n                  onChange: e => onEditTransaction(editingCoin, idx, \"amount\", +e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 124,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  variant: \"outlined\",\n                  size: \"small\",\n                  type: \"number\",\n                  value: txn.total,\n                  onChange: e => onEditTransaction(editingCoin, idx, \"total\", +e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 135,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"outlined\",\n                  color: \"error\",\n                  size: \"small\",\n                  onClick: () => onDeleteTransaction(editingCoin, idx),\n                  children: \"Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 146,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 21\n              }, this)]\n            }, idx, true, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s(TransactionsTable, \"ARC7j5sqv1H+r22ZOymQaDXgBSs=\");\n_c2 = TransactionsTable;\nexport default TransactionsTable;\nvar _c, _c2;\n$RefreshReg$(_c, \"TypeCell\");\n$RefreshReg$(_c2, \"TransactionsTable\");","map":{"version":3,"names":["React","useState","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","Button","Box","Typography","TextField","styled","jsxDEV","_jsxDEV","TypeCell","type","color","fontWeight","textTransform","_c","TransactionsTable","groupedTransactions","onEditTransaction","onDeleteTransaction","_s","_groupedTransactions$","editingCoin","setEditingCoin","calculateAggregateData","Object","entries","map","coin","totalAmount","reduce","sum","entry","amount","totalValue","total","aggregatedData","children","length","component","sx","mb","fileName","_jsxFileName","lineNumber","columnNumber","idx","variant","size","onClick","gutterBottom","txn","date","price","value","onChange","e","target","_c2","$RefreshReg$"],"sources":["/Users/neel/Documents/Tax calculator/taxcalc/crypto-tax-calculator/src/components/TransactionsTable.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Paper,\n  Button,\n  Box,\n  Typography,\n  TextField,\n} from \"@mui/material\";\nimport { styled } from \"@mui/system\";\n\nconst TypeCell = styled(TableCell)(({ type }: { type: string }) => ({\n  color: type === \"sell\" ? \"red\" : \"green\",\n  fontWeight: \"bold\",\n  textTransform: \"uppercase\",\n}));\n\ninterface Transaction {\n  date: string;\n  market: string;\n  type: string;\n  price: number;\n  amount: number;\n  total: number;\n}\n\ninterface TransactionsTableProps {\n  groupedTransactions: { [key: string]: Transaction[] };\n  onEditTransaction: (\n    coin: string,\n    index: number,\n    field: keyof Transaction,\n    value: number\n  ) => void;\n  onDeleteTransaction: (coin: string, index: number) => void;\n}\n\nconst TransactionsTable: React.FC<TransactionsTableProps> = ({\n  groupedTransactions,\n  onEditTransaction,\n  onDeleteTransaction,\n}) => {\n  const [editingCoin, setEditingCoin] = useState<string | null>(null);\n\n  const calculateAggregateData = () => {\n    return Object.entries(groupedTransactions).map(([coin, entries]) => {\n      const totalAmount = entries.reduce((sum, entry) => sum + entry.amount, 0);\n      const totalValue = entries.reduce((sum, entry) => sum + entry.total, 0);\n      return { coin, totalAmount, totalValue };\n    });\n  };\n\n  const aggregatedData = calculateAggregateData();\n\n  return (\n    <Box>\n      {aggregatedData.length > 0 && (\n        <TableContainer component={Paper} sx={{ mb: 3 }}>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell>Market</TableCell>\n                <TableCell>Total Amount</TableCell>\n                <TableCell>Total Value</TableCell>\n                <TableCell>Actions</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {aggregatedData.map(({ coin, totalAmount, totalValue }, idx) => (\n                <TableRow key={idx}>\n                  <TableCell>{coin}</TableCell>\n                  <TableCell>{totalAmount}</TableCell>\n                  <TableCell>{totalValue}</TableCell>\n                  <TableCell>\n                    <Button\n                      variant=\"contained\"\n                      size=\"small\"\n                      color=\"secondary\"\n                      onClick={() =>\n                        setEditingCoin(editingCoin === coin ? null : coin)\n                      }\n                    >\n                      {editingCoin === coin ? \"Hide Transactions\" : \"View Transactions\"}\n                    </Button>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      )}\n\n      {editingCoin && (\n        <Box>\n          <Typography variant=\"h6\" gutterBottom>\n            Transactions for {editingCoin}\n          </Typography>\n          <TableContainer component={Paper}>\n            <Table>\n              <TableHead>\n                <TableRow>\n                  <TableCell>Date</TableCell>\n                  <TableCell>Type</TableCell>\n                  <TableCell>Price</TableCell>\n                  <TableCell>Amount</TableCell>\n                  <TableCell>Total</TableCell>\n                  <TableCell>Actions</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {groupedTransactions[editingCoin]?.map((txn, idx) => (\n                  <TableRow key={idx}>\n                    <TableCell>{txn.date || \"Unknown\"}</TableCell>\n                    <TypeCell type={txn.type}>\n                      {txn.type === \"sell\" ? \"SELL\" : \"BUY\"}\n                    </TypeCell>\n                    <TableCell>{txn.price}</TableCell>\n                    <TableCell>\n                      <TextField\n                        variant=\"outlined\"\n                        size=\"small\"\n                        type=\"number\"\n                        value={txn.amount}\n                        onChange={(e) =>\n                          onEditTransaction(editingCoin, idx, \"amount\", +e.target.value)\n                        }\n                      />\n                    </TableCell>\n                    <TableCell>\n                      <TextField\n                        variant=\"outlined\"\n                        size=\"small\"\n                        type=\"number\"\n                        value={txn.total}\n                        onChange={(e) =>\n                          onEditTransaction(editingCoin, idx, \"total\", +e.target.value)\n                        }\n                      />\n                    </TableCell>\n                    <TableCell>\n                      <Button\n                        variant=\"outlined\"\n                        color=\"error\"\n                        size=\"small\"\n                        onClick={() => onDeleteTransaction(editingCoin, idx)}\n                      >\n                        Delete\n                      </Button>\n                    </TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </Box>\n      )}\n    </Box>\n  );\n};\n\nexport default TransactionsTable;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}